{"version":3,"sources":["views/role/Role.js","views/service/dataservice.js","views/common/common.js"],"names":["notify","type","message","systemerror","toast","success","position","POSITION","TOP_CENTER","dtlmsg","undefined","error","name","Role","columns","selector","sortable","cell","d","color","isactive","ignoreRowClick","row","onClick","e","editdata","className","data","loginuser","localStorage","getItem","JSON","parse","queryPage","useHistory","useLocation","search","match","currentPage","Number","useState","usermodalpopup","setUserModalPopUp","disabledbtn","rawroledata","setRawRoleData","setRoledata","menudata","setMenudata","setSelectedRoleValue","rolename","appmenu","menu","id","state","setState","dataservice","requestfor","then","resultkey","result","resultvalue","length","appmenudata","menuitemdata","menuitem","setTimeout","prevState","catch","edata","toString","handleChange1","target","chkstat","checked","newdata","map","item","allow","push","menuuuid","desc","menuname","index","slice","handleChange","value","useEffect","getroledata","resetvalues","getroledetail","elementapp","_menu","filter","x","elementmenu","mind","flag","_result","seelectroledata","label","element","parseInt","xl","style","textAlign","show","onClose","size","closeButton","md","xs","onChange","placeholder","variant","inline","custom","htmlFor","rows","web","menufor","mindex","melement","mobile","disabled","_filtermenu","_appmenu","_menuitem","roleid","loggedinid","console","log","rowid","savedata","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover","controller","reqbody","a","requestOptions","method","headers","body","stringify","url","fetch","response","json","ok","status","Promise","reject","_host","commondata","require","mode","fileuploadurl","guesttemplate","baseurl"],"mappings":"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","file":"static/js/50.d5b2c39a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CModal,\r\n  CModalTitle,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CForm,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CInputGroup,\r\n  CInput,\r\n  CFormGroup,\r\n  CInputCheckbox,\r\n  CLabel,\r\n  CModalFooter,\r\n  CBadge\r\n} from '@coreui/react'\r\n\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport Select from 'react-select';\r\nimport CIcon from '@coreui/icons-react';\r\nimport dataservice from '../service/dataservice';\r\nimport {  toast } from 'react-toastify';\r\n\r\n\r\nconst notify=(type,message,systemerror)=>{\r\n  switch (type) {\r\n    case 1:\r\n      toast.success(message, {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      break;\r\n    case 2:\r\n      var dtlmsg;\r\n      if(systemerror!==undefined){\r\n      dtlmsg=<div>Please contact to administrator!<br></br>{message}</div>;\r\n      }else{\r\n        dtlmsg=<div>{message}</div>;\r\n      }\r\n\r\n      toast.error(<div>\r\n         <CIcon name=\"cil-warning\" /> Error\r\n      \r\n        {dtlmsg}\r\n        \r\n      </div>, {\r\n          position: toast.POSITION.TOP_CENTER\r\n        });\r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n}\r\nconst Role = () => {\r\n  const columns = [\r\n    {\r\n      name: 'Role Name',\r\n      selector: 'rolename',\r\n      sortable: true,\r\n    },\r\n  \r\n    // {\r\n    //   name: 'Genres',\r\n    //   selector: 'genres',\r\n    //   sortable: true,\r\n    //   cell: d => <span>{d.genres.join(', ')}</span>,\r\n    // },\r\n    // <CBadge color={getBadge(item.status)}>\r\n    //                     {item.status}\r\n    //                   </CBadge>\r\n    //<span>{d.isactive==\"1\"?\"True\":\"False\"}</span>\r\n    {\r\n      name: 'Status',\r\n      selector: 'isactive',\r\n      sortable: true,\r\n      cell: d => <CBadge color={d.isactive==\"1\"?\"success\":\"danger\"}>\r\n                          {d.isactive==\"1\"?\"Active\":\"In Active\"}\r\n                         </CBadge>,\r\n    },\r\n    {\r\n      name: 'Action',\r\n      selector: 'action',\r\n      ignoreRowClick: true,\r\n      cell: row =>  <CIcon  name=\"cil-pencil\" onClick={e => editdata(row, e)} className=\"mfe-2 custcusrsor\" />\r\n     \r\n    },\r\n  ];\r\n  const data = [];\r\n  // const data = [\r\n  //   {\r\n  //     id:1,\r\n  //     username:  <CBadge color=\"success\"  >isactive</CBadge>,\r\n  //     year: '1988',\r\n  //     genres: [\r\n  //       'Comedy',\r\n  //       'Fantasy',\r\n  //     ],\r\n  //     director: 'Tim Burton',\r\n     \r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     title: 'The Cotton Club',\r\n  //     year: '1984',\r\n  //     runtime: '127',\r\n  //     genres: [\r\n  //       'Crime',\r\n  //       'Drama',\r\n  //       'Music',\r\n  //     ],\r\n  //     director: 'Francis Ford Coppola',\r\n      \r\n  //   }, {\r\n  //     id: 3,\r\n  //     title: 'The Cotton Club',\r\n  //     year: '1986',\r\n  //     runtime: '127',\r\n  //     genres: [\r\n  //       'Crime',\r\n  //       'Drama',\r\n  //       'Music',\r\n  //     ],\r\n  //     director: 'Francis Ford Coppola',\r\n      \r\n  //   }];\r\n  let loginuser = localStorage.getItem('userinfo') == \"\" || undefined ? \"\" : JSON.parse(localStorage.getItem('userinfo'));\r\n\r\n  const userrawdata=[];\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  const [page, setPage] = useState(currentPage)\r\n  const [usermodalpopup, setUserModalPopUp] = useState(false);\r\n  const [disabledbtn, setDisabledBtn] = useState(false);\r\n  const[userdata,setUserdata]=useState({\r\n    columns,\r\n    data\r\n  });\r\n  const[rawroledata,setRawRoleData]=useState({\r\n    columns,\r\n    data\r\n  });\r\n  \r\n  const[rolename,setRoleName]=useState(\"\");\r\n  const[roledata,setRoledata]=useState([]);\r\n  const[menudata,setMenudata]=useState([]);\r\n  const[selectedrolevalue,setSelectedRoleValue]=useState([]);\r\n  const[roledetail,setRoleDetail]=useState([]);\r\n\r\n\r\n  const pageChange = newPage => {\r\n    currentPage !== newPage && history.push(`/users?page=${newPage}`)\r\n  }\r\n  const [state, setState] = useState({\r\n    rolename: \"\",\r\n    appmenu: \"\",\r\n    menu: \"\",\r\n    id:\"\",\r\n    isactive:true,\r\n  });\r\n  \r\n  const editdata=(row, e) =>{\r\n     \r\n    \r\n    dataservice(\"role\",{ requestfor: 'getmenubyroleid' ,data:{id:row.id}})\r\n  .then(function(data) {\r\n    if(data.resultkey==1){\r\n      var result=data.resultvalue;\r\n      if(result.length>0){\r\n        //setRoleDetail(result[0]);\r\n\r\nvar appmenudata =result[0].appmenu==null?[]:JSON.parse(result[0].appmenu);\r\nvar menuitemdata =result[0].menuitem==null?[]:JSON.parse(result[0].menuitem);\r\n        \r\n ;\r\n        setTimeout(() => {\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                rolename: row.rolename,\r\n                appmenu: appmenudata,\r\n                menu: menuitemdata,\r\n                id:row.id,\r\n                isactive:result[0].isactive==\"1\"?true:false,\r\n              }));\r\n              setUserModalPopUp(!usermodalpopup);\r\n        }, 1000);\r\n        \r\n   \r\n      }else{\r\n          setTimeout(() => {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    rolename: \"\",\r\n                    appmenu: [],\r\n                    menu: [],\r\n                    id:\"\",\r\n                    isactive:true,\r\n                }));\r\n              setUserModalPopUp(!usermodalpopup);\r\n          }, 1000);\r\n        \r\n        \r\n        \r\n      }\r\n     \r\n    }else{\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            rolename: \"\",\r\n            appmenu: [],\r\n            menu: [],\r\n            id:\"\",\r\n            isactive:true,\r\n          }));\r\n    }\r\n        \r\n    })\r\n    .catch(function(edata){\r\n         \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            rolename: \"\",\r\n            appmenu: [],\r\n            menu: [],\r\n            id:\"\",\r\n            isactive:true,\r\n          }));\r\n        notify(2,edata.toString(),1);\r\n        \r\n    });\r\n\r\n\r\n   // setUserModalPopUp(!usermodalpopup);\r\n  }\r\n\r\n   \r\n \r\n  \r\n  const tableData = {\r\n    columns,\r\n    data,\r\n  };\r\n  const handleChange1=(row, e) =>{\r\n    \r\n    if (e.target.type === 'checkbox' ) {\r\n        var chkstat=(e.target.checked==true?e.target.checked:false);\r\n        const newdata = menudata.map((item) => {\r\n            if (item.id === row.id) {\r\n              const updatedItem = {\r\n                ...item,\r\n                allow: chkstat\r\n              };\r\n        \r\n              return updatedItem;\r\n            }\r\n        \r\n            return item;\r\n          });\r\n     //   console.log(newdata);\r\n        setMenudata(newdata);\r\n\r\n        if(chkstat){\r\n            state.appmenu.push({\r\n                id: row.menuuuid,\r\n             desc: row.menuname});\r\n        }else{\r\n            if(state.appmenu.length>0){\r\n                for (let index = 0; index < state.appmenu.length; index++) {\r\n                    const element = state.appmenu[index];\r\n                    if(element.id==row.id){\r\n                        state.appmenu.slice(0,index);\r\n                        break;\r\n                    }\r\n                    \r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        // setState({...state, [\"rolename\"]: value });\r\n\r\n    }\r\n  }\r\n  const handleChange = (e) => {\r\n  \r\n    const { id, value } = e.target\r\n    if (e.target.type === 'checkbox' ) {\r\n        setState({...state, [\"isactive\"]: (e.target.checked==true?e.target.checked:false) });\r\n    }else{\r\n        setState({...state, [\"rolename\"]: value });\r\n    }\r\n  \r\n    \r\n  \r\n   \r\n }\r\n\r\n const onUpdateItem = i => {\r\n//  setUserdata({ ...userdata, [\"data\"]: [...userdata.data,newuser ] });\r\n\r\n  //setRoledata\r\n  \r\n};\r\n\r\n\r\n const savedata = () => {\r\n\r\n    if(state.rolename.length==0){\r\n        notify(2,\"Please role name !\");\r\n      }\r\n\r\n    var _filtermenu=menudata.filter(x=>x.allow==true);\r\n\r\n    var _appmenu=[];\r\n    var _menuitem=[];\r\n    if(_filtermenu.length>0){\r\n        for (let index = 0; index < _filtermenu.length; index++) {\r\n            var element = _filtermenu[index];\r\n            if(element.menufor==\"0\"){\r\n                //web menu\r\n                _menuitem.push({\r\n                    \"id\":element.menuuuid , \r\n                    \"desc\": element.menuname\r\n                })\r\n            }else{\r\n                _appmenu.push({\r\n                    \"id\":element.menuuuid , \r\n                    \"desc\": element.menuname\r\n                })\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    var data={flag:state.id==\"\"?\"i\":'u',isactive:1,roleid:state.id,rolename:state.rolename,appmenu:_appmenu,menuitem:_menuitem,\r\n    loggedinid:loginuser.id,}\r\n    dataservice(\"role\",{ requestfor: 'role' ,\r\n        data:{flag:state.id==\"\"?\"i\":'u',isactive:state.isactive==true?1:0,roleid:state.id,rolename:state.rolename,appmenu:_appmenu,menuitem:_menuitem,\r\n        loggedinid:loginuser.id,}})\r\n        .then(function(data) {\r\n          if(data.resultkey==1){\r\n            \r\n            if(state.id!=\"\"){\r\n          \r\n                const newdata = rawroledata.data.map((item) => {\r\n                     ;\r\n                    if (item.id === state.id) {\r\n                      const updatedItem = {\r\n                        ...item,\r\n                        isactive: state.isactive==true?\"1\":\"0\",\r\n                        rolename: state.rolename\r\n                      };\r\n                \r\n                      return updatedItem;\r\n                    }\r\n                \r\n                    return item;\r\n                  });\r\n                  console.log(newdata);\r\n                  setRawRoleData({ ...rawroledata, [\"data\"]: newdata });\r\n                  resetvalues();\r\n                  setUserModalPopUp(!usermodalpopup);\r\n                  notify(1,`Data updated successfully.`);\r\n      \r\n              }else{\r\n                \r\n                var result=data.resultvalue[0];\r\n         \r\n                var newdata={\r\n                  \"id\" : result.rowid,\r\n                  isactive: state.isactive==true?\"1\":\"0\",\r\n                  rolename: state.rolename\r\n                 \r\n                };\r\n    \r\n                setRawRoleData({ ...rawroledata, [\"data\"]: newdata });\r\n                resetvalues();\r\n                setUserModalPopUp(!usermodalpopup);\r\n                notify(1,`Data save successfully.`); \r\n              }\r\n          }else{\r\n    \r\n          }\r\n        })\r\n        .catch(function(error){\r\n             ;\r\n        });\r\n\r\n\r\n\r\n\r\n    \r\n  //vaildation\r\n//   var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n     \r\n//   if(state.email.length==0){\r\n//     notify(2,\"Please enter email id !\");\r\n//   }else if(!pattern.test(state.email)){\r\n//     notify(2,\"Invaild email id !\");\r\n//   }else if(state.password.length==0){\r\n//     notify(2,\"Please enter password !\");\r\n//   }else if(state.username.length==0){\r\n//     notify(2,\"Please enter username !\");\r\n//   }else if(selectedrolevalue==0){\r\n//     notify(2,\"Please select role !\");\r\n//   }else{\r\n     \r\n//     dataservice(\"user\",{ requestfor: 'user' ,\r\n//     data:{flag:state.id==\"\"?\"i\":'u',username:state.username,password:state.password,email:state.email,\r\n//     loggedinid:loginuser.id,roleid:selectedrolevalue,isactive:state.isactive,id:state.id}})\r\n//     .then(function(data) {\r\n//       if(data.resultkey==1){\r\n//         if(state.id!=\"\"){\r\n          \r\n//           onUpdateItem(state.id);\r\n\r\n//         }else{\r\n//             var result=data.resultvalue;\r\n//             var rolename=roledata.filter(x=>x.value==selectedrolevalue);\r\n\r\n//             var newuser={\r\n//               \"id\" : result.rowid,\r\n//               \"username\" : state.username,\r\n//               \"isactive\":\"1\",\r\n//               \"email\":state.email,\r\n//               \"roleid\":selectedrolevalue,\r\n//               \"rolename\":rolename.length>0?rolename[0].label:\"\"\r\n//             };\r\n\r\n\r\n//             setUserdata({ ...userdata, [\"data\"]: [...userdata.data,newuser ] });\r\n//             resetvalues();\r\n//             notify(1,`Data save successfully.`);\r\n//         }\r\n       \r\n      \r\n//       }else{\r\n\r\n//       }\r\n//     })\r\n//     .catch(function(error){\r\n       \r\n//     })\r\n//   }\r\n \r\n };\r\n\r\n useEffect(()=>{\r\n   \r\n  getroledata();\r\n  resetvalues();\r\n  getroledetail();\r\n},[])\r\nuseEffect(()=>{\r\n        for (let index = 0; index < menudata.length; index++) {\r\n            let element = menudata[index];\r\n            element.allow=false;\r\n        }\r\n    if(state.rolename!=\"\"){\r\n        \r\n         ;\r\n        for (let index = 0; index < state.appmenu.length; index++) {\r\n            let elementapp = state.appmenu[index];\r\n            var _menu= menudata.filter(x=>x.menuuuid==elementapp.id);\r\n            if(_menu.length>0){\r\n                _menu[0].allow=true;\r\n            }\r\n        }\r\n        for (let index = 0; index < state.menu.length; index++) {\r\n            let elementmenu = state.menu[index];\r\n            var _menu= menudata.filter(x=>x.menuuuid==elementmenu.id);\r\n            if(_menu.length>0){\r\n                _menu[0].allow=true;\r\n            }\r\n        }\r\n    } \r\n    \r\n},[state])\r\n\r\n\r\nconst getroledetail=()=>{\r\n    dataservice(\"role\",{ requestfor: 'getmenudetail' ,data:{}})\r\n    .then(function(data) {\r\n      if(data.resultkey==1){\r\n           \r\n        var result=data.resultvalue;\r\n        if(result.length>0){\r\n\r\n            for (let mind = 0; mind < result.length; mind++) {\r\n                let menuelement = result[mind];\r\n                menuelement.allow=false;\r\n            }\r\n\r\n            setMenudata(result);\r\n        }\r\n      }else{\r\n        //notify(2,\"Invaild username/password\");\r\n      }\r\n          \r\n      })\r\n      .catch(function(edata){\r\n          notify(2,edata.toString(),1);\r\n          //console.log(' movies:', edata);\r\n      });\r\n  \r\n  \r\n  \r\n  }\r\nconst getroledata=()=>{\r\n  dataservice(\"role\",{ requestfor: 'getrole' ,data:{flag:'a'}})\r\n  .then(function(data) {\r\n    if(data.resultkey==1){\r\n      var result=data.resultvalue;\r\n      if(result.length>0){\r\n\r\n        var _result=result.filter(x=>x.id!=\"0\");\r\n        \r\n        setRawRoleData({ ...rawroledata, [\"data\"]: _result });\r\n        let seelectroledata=[{\r\n          value: 0,\r\n          label: \"Select Role\"\r\n        }];\r\n        for (let index = 0; index < result.length; index++) {\r\n          const element = result[index];\r\n        //  console.log(element);\r\n          if(element.isactive){\r\n            seelectroledata.push({\r\n              value: parseInt(element.id),\r\n              label: element.rolename\r\n            })\r\n          }\r\n        }\r\n        \r\n        setRoledata(seelectroledata);\r\n      }\r\n    }else{\r\n      //notify(2,\"Invaild username/password\");\r\n    }\r\n        \r\n    })\r\n    .catch(function(edata){\r\n        notify(2,edata.toString(),1);\r\n        //console.log(' movies:', edata);\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\n const openpopup=()=>{\r\n  resetvalues();\r\n  setUserModalPopUp(!usermodalpopup);\r\n }\r\n\r\n const resetvalues=()=>{\r\n  setSelectedRoleValue(0);\r\n  setState(prevState => ({\r\n    ...prevState,\r\n    rolename: \"\",\r\n    appmenu: [],\r\n    menu: [],\r\n    id:\"\",\r\n    isactive:true,\r\n  }));\r\n  \r\n\r\n\r\n }\r\n\r\n\r\n\r\n const handleChangeOption = e => {\r\n  setSelectedRoleValue(e.value);\r\n}\r\n \r\n\r\n\r\n  return (\r\n    <>\r\n   <CRow>\r\n      <CCol xl={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol xl={6}>\r\n                Role\r\n                <small className=\"text-muted\"> Master</small>\r\n              </CCol>\r\n                <CCol xl={6} style={{textAlign:\"end\"}}>\r\n                <CButton\r\n                    onClick={() => openpopup('n',{})}\r\n                    className=\"mr-1\"\r\n                    color=\"primary\"\r\n                \r\n                  >\r\n                    Add New\r\n                \r\n                  </CButton>\r\n            \r\n              </CCol>\r\n            </CRow>\r\n            \r\n           \r\n         \r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <CModal show={usermodalpopup} onClose={() => setUserModalPopUp(!usermodalpopup)} size=\"lg\">\r\n              <CModalHeader closeButton>\r\n              <CModalTitle>Role </CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCol md=\"12\">\r\n                  <CForm>  \r\n                        <CRow >\r\n                            <CCol xs=\"6\" className=\"text-right\">\r\n                                <CInputGroup className=\"mb-3\">\r\n                                <CInputGroupPrepend>\r\n                                    <CInputGroupText>\r\n                                    <CIcon name=\"cil-settings\" style={{ color: \"red\" }} /><sup style={{ color: \"red\" }}>*</sup>\r\n                                    </CInputGroupText>\r\n                                </CInputGroupPrepend>\r\n                                <CInput onChange={handleChange} type=\"text\" value={state.rolename} id=\"rolename\" placeholder=\"Enter role name\" />\r\n                                </CInputGroup>\r\n                            </CCol> \r\n                            <CCol xs=\"4\">\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"9\">\r\n                                        <CFormGroup variant=\"custom-checkbox\" inline>\r\n                                            <CInputCheckbox custom id=\"isactive\" name=\"inline-checkbox2\" \r\n                                            value={state.isactive} checked={state.isactive}   \r\n                                            onChange={handleChange}/>\r\n                                            <CLabel variant=\"custom-checkbox\" htmlFor=\"isactive\">\r\n                                                Active\r\n                                           </CLabel>\r\n                                         \r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                      <h3>Web Setting</h3><br></br>\r\n                        <CRow>\r\n                       \r\n                            {(() => {\r\n                                  const rows = [];\r\n                                   //if(state.menu.length>0){\r\n                                    if (menudata.length>0) {\r\n                                        var web=menudata.filter(x=>x.menufor==0);\r\n                                        var webmenus;\r\n                                       \r\n                                       \r\n                                        for (let mindex = 0; mindex < web.length; mindex++) {\r\n                                           const melement = web[mindex];\r\n                                        //    if(state.menu.length>0){\r\n                                        //        webmenus=state.menu;\r\n                                        //        melement.allow=webmenus.filter(x=>x.id==melement.menuuuid).length>0?true:false;\r\n                                          \r\n                                        //    }\r\n                                            rows.push(<>\r\n                                               <CCol xs=\"4\">\r\n                                                    <CFormGroup row>\r\n                                                        <CCol md=\"9\">\r\n                                                            <CFormGroup variant=\"custom-checkbox\" inline>\r\n                                                                <CInputCheckbox custom id= {melement.menuname} name=\"inline-checkbox2\" value={melement.allow} checked={melement.allow}   \r\n                                                                onChange={e => handleChange1(melement, e)}/>\r\n                                                                <CLabel variant=\"custom-checkbox\" htmlFor= {melement.menuname}>\r\n                                                                    {melement.menuname}\r\n                                                               </CLabel>\r\n                                                             \r\n                                                            </CFormGroup>\r\n                                                        </CCol>\r\n                                                    </CFormGroup>\r\n                                                </CCol>\r\n                                            </>); \r\n                                        }\r\n                                     \r\n                                       \r\n   \r\n                                       return rows;\r\n                                     }\r\n                                  // }\r\n                                  \r\n\r\n                                })()}\r\n\r\n                        </CRow>\r\n                      <h3>Mobile Setting</h3><br></br>\r\n                        <CRow>\r\n                            {(() => {\r\n                                  const rows = [];\r\n                                 // if(state.appmenu.length>0){\r\n                                    if (menudata.length>0) {\r\n                                        var appmenus;\r\n                                         \r\n                                       \r\n                                        var mobile=menudata.filter(x=>x.menufor==1);\r\n                                         for (let mindex = 0; mindex < mobile.length; mindex++) {\r\n                                             const melement = mobile[mindex];\r\n                                            //  if(state.appmenu.length>0){\r\n                                            //     appmenus=state.appmenu;\r\n                                            //     melement.allow=appmenus.filter(x=>x.id==melement.menuuuid).length>0?true:false;\r\n                                           \r\n                                            // }\r\n                                            \r\n                                             rows.push(<>\r\n                                                <CCol xs=\"4\">\r\n                                                     <CFormGroup row>\r\n                                                         <CCol md=\"9\">\r\n                                                             <CFormGroup variant=\"custom-checkbox\" inline>\r\n                                                                 <CInputCheckbox custom id={melement.menuname} name=\"inline-checkbox2\"\r\n                                                                  value={melement.allow} checked={melement.allow}   \r\n                                                                  onChange={e => handleChange1(melement, e)}/>\r\n                                                                 <CLabel variant=\"custom-checkbox\" htmlFor={melement.menuname}>\r\n                                                                     {melement.menuname}\r\n                                                                </CLabel>\r\n                                                              \r\n                                                             </CFormGroup>\r\n                                                         </CCol>\r\n                                                     </CFormGroup>\r\n                                                 </CCol>\r\n                                             </>); \r\n                                         }\r\n                                      \r\n                                        \r\n    \r\n                                        return rows;\r\n                                      }\r\n                                 // }\r\n                                  \r\n\r\n                                })()}\r\n\r\n                        </CRow>\r\n                  </CForm>\r\n\r\n                </CCol>\r\n\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" disabled={disabledbtn}  onClick={() => savedata()}>Save</CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() => setUserModalPopUp(!usermodalpopup)}>Cancel</CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n\r\n          <DataTableExtensions\r\n             {...rawroledata}\r\n    >\r\n        \r\n\r\n      <DataTable\r\n        noHeader\r\n        defaultSortField=\"id\"\r\n        defaultSortAsc={false}\r\n        pagination\r\n        highlightOnHover\r\n       \r\n      />\r\n    </DataTableExtensions>\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n      </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Role\r\n","import common from '../common/common';\r\nconst dataservice = async (controller, reqbody) => {\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(reqbody)\r\n  };\r\n  //common.baseurl +;\r\n  // https://maubantourism.smartpay.ph/\r\n  // https://tourism-test.smartpay.ph/\r\n  const url = \"https://maubantourism.smartpay.ph/tourbookingphp/\" + controller + \".php\"\r\n  return await fetch(url, requestOptions)\r\n    .then(async response => {\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      } else {\r\n        return data;\r\n      }\r\n\r\n    })\r\n    .catch(error => {\r\n      return Promise.reject(error);\r\n    });\r\n\r\n}\r\n\r\nexport default dataservice","var readJson = require('read-package-json')\r\nvar data = require('../../../package.json')\r\nvar _host = \"\";\r\n_host = \"https://maubantourism.smartpay.ph\";\r\nlet commondata;\r\nif (data.mode == \"dev\") {\r\n  commondata = {\r\n    fileuploadurl: \"/tourbookingphp/upload.php\",\r\n    guesttemplate: _host + \"/tourbookingphp/guesttemplate.xlsx\",\r\n    //  filepath:_host+\"/tourbooking/uploads/\",\r\n    baseurl: _host + \"/tourbookingphp/\",\r\n  }\r\n} else {\r\n\r\n  commondata = {\r\n    fileuploadurl: \"/tourbookingphp/upload.php\",\r\n    guesttemplate: \"/tourbookingphp/guesttemplate.xlsx\",\r\n    //  filepath:_host+\"/tourbooking/uploads/\",\r\n    baseurl: \"/tourbookingphp/\",\r\n  }\r\n}\r\n\r\n// _host=window.location.host;\r\n//  const commondata = {\r\n//      fileuploadurl:_host+\"/tourbookingphp/upload.php\",\r\n//     //  filepath:_host+\"/tourbooking/uploads/\",\r\n//      baseurl: _host+\"/tourbookingphp/\", \r\n//  }\r\n//live\r\n// const commondata = {\r\n//     fileuploadurl:\"/tourbookingphp/upload.php\",\r\n//    //  filepath:_host+\"/tourbooking/uploads/\",\r\n//     baseurl: \"/tourbookingphp/\", \r\n// }\r\n//staging\r\n// const commondata = {\r\n//     fileuploadurl:\"/tourbookingphp/upload.php\",\r\n//    //  filepath:_host+\"/tourbooking/uploads/\",\r\n//     baseurl: _host+\"/tourbookingphp/\", \r\n// }\r\n\r\n\r\n//  const commondata = {\r\n//          fileuploadurl:\"/investorportalphp/upload.php\",\r\n//          filepath:\"/investorportalphp/uploads/\",\r\n//          baseurl: \"/investorportalphp/api.php\", \r\n//      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default commondata\r\n"],"sourceRoot":""}