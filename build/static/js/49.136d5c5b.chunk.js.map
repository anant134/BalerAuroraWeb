{"version":3,"sources":["views/province/province.js","views/service/dataservice.js","views/common/common.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["notify","type","message","systemerror","toast","success","position","POSITION","TOP_CENTER","dtlmsg","undefined","error","name","Province","columns","selector","sortable","cell","d","color","isactive","ignoreRowClick","row","onClick","e","editdata","className","data","loginuser","localStorage","getItem","JSON","parse","queryPage","useHistory","useLocation","search","match","currentPage","Number","useState","provincemodalpopup","setProvinceModalPopUp","disabledbtn","provincedata","setProvincedata","countrydata","setCountrydata","selectedcountryvalue","setSelectedCountryValue","description","id","state","setState","console","log","prevState","parseInt","countryid","handleChange","target","value","checked","savedata","RegExp","length","dataservice","requestfor","flag","loggedinid","then","resultkey","i","countryname","filter","x","newdata","map","item","country","label","resetvalues","onUpdateItem","result","resultvalue","newuser","rowid","catch","useEffect","getprovincedata","getcountrydata","edata","toString","seelectroledata","index","element","push","xl","style","textAlign","show","onClose","size","closeButton","md","xs","placeholder","find","obj","options","onChange","display","variant","inline","custom","htmlFor","disabled","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover","controller","reqbody","a","requestOptions","method","headers","body","stringify","url","fetch","response","json","ok","status","Promise","reject","_host","commondata","require","mode","fileuploadurl","guesttemplate","baseurl","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/49.136d5c5b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CModal,\r\n  CModalTitle,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CForm,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CInputGroup,\r\n  CInput,\r\n  CFormGroup,\r\n  CInputCheckbox,\r\n  CLabel,\r\n  CModalFooter,\r\n  CBadge\r\n} from '@coreui/react'\r\n\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport Select from 'react-select';\r\nimport CIcon from '@coreui/icons-react';\r\nimport dataservice from '../service/dataservice';\r\nimport {  toast } from 'react-toastify';\r\n\r\n\r\nconst notify=(type,message,systemerror)=>{\r\n  switch (type) {\r\n    case 1:\r\n      toast.success(message, {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      break;\r\n    case 2:\r\n      var dtlmsg;\r\n      if(systemerror!==undefined){\r\n      dtlmsg=<div>Please contact to administrator!<br></br>{message}</div>;\r\n      }else{\r\n        dtlmsg=<div>{message}</div>;\r\n      }\r\n\r\n      toast.error(<div>\r\n         <CIcon name=\"cil-warning\" /> Error\r\n      \r\n        {dtlmsg}\r\n        \r\n      </div>, {\r\n          position: toast.POSITION.TOP_CENTER\r\n        });\r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n}\r\nconst Province = () => {\r\n  const columns = [\r\n    {\r\n        name: 'Country',\r\n        selector: 'country',\r\n        sortable: true,\r\n    },\r\n    {\r\n      name: 'Province',\r\n      selector: 'description',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Genres',\r\n    //   selector: 'genres',\r\n    //   sortable: true,\r\n    //   cell: d => <span>{d.genres.join(', ')}</span>,\r\n    // },\r\n    // <CBadge color={getBadge(item.status)}>\r\n    //                     {item.status}\r\n    //                   </CBadge>\r\n    //<span>{d.isactive==\"1\"?\"True\":\"False\"}</span>\r\n    {\r\n      name: 'Status',\r\n      selector: 'isactive',\r\n      sortable: true,\r\n      cell: d => <CBadge color={d.isactive==\"1\"?\"success\":\"danger\"}>\r\n                          {d.isactive==\"1\"?\"Active\":\"In Active\"}\r\n                         </CBadge>,\r\n    },\r\n    {\r\n      name: 'Action',\r\n      selector: 'action',\r\n      ignoreRowClick: true,\r\n      cell: row =>  <CIcon  name=\"cil-pencil\" onClick={e => editdata(row, e)} className=\"mfe-2 custcusrsor\" />\r\n     \r\n    },\r\n  ];\r\n  const data = [];\r\n  let loginuser = localStorage.getItem('userinfo') == \"\" || undefined ? \"\" : JSON.parse(localStorage.getItem('userinfo'));\r\n\r\n  const userrawdata=[];\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  const [page, setPage] = useState(currentPage)\r\n  const [provincemodalpopup, setProvinceModalPopUp] = useState(false);\r\n  const [disabledbtn, setDisabledBtn] = useState(false);\r\n  const[provincedata,setProvincedata]=useState({\r\n    columns,\r\n    data\r\n  });\r\n  const[countrydata,setCountrydata]=useState([]);\r\n  const[selectedcountryvalue,setSelectedCountryValue]=useState([]);\r\n\r\n\r\n\r\n  const pageChange = newPage => {\r\n    currentPage !== newPage && history.push(`/users?page=${newPage}`)\r\n  }\r\n  const [state, setState] = useState({\r\n    description: \"\",\r\n    id:\"\",\r\n    isactive:true,\r\n  });\r\n  \r\n  const editdata=(row, e) =>{\r\n     \r\n    console.log(row);\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      description: row.description,\r\n      id:row.id,\r\n      isactive:row.isactive,\r\n    }));\r\n     \r\n    setSelectedCountryValue(parseInt(row.countryid));\r\n    setProvinceModalPopUp(!provincemodalpopup);\r\n  }\r\n\r\n   \r\n \r\n  \r\n  const tableData = {\r\n    columns,\r\n    data,\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n  \r\n   if (e.target.type === 'checkbox' ) {\r\n     setState({...state, [id]: (e.target.checked==true?e.target.checked:false)});\r\n   } else {\r\n     setState({...state, [id]: value });\r\n   }\r\n }\r\n\r\n const onUpdateItem = i => {\r\n//  setProvincedata({ ...provincedata, [\"data\"]: [...provincedata.data,newuser ] });\r\n\r\n  let countryname=countrydata.filter(x=>x.value==selectedcountryvalue);\r\n  \r\n  const newdata = provincedata[\"data\"].map((item) => {\r\n    if (item.id === i) {\r\n      const updatedItem = {\r\n        ...item,\r\n        description :state.description,\r\n        isactive: state.isactive,\r\n        countryid:selectedcountryvalue,\r\n        country:countryname.length>0?countryname[0].label:\"\"\r\n      };\r\n\r\n      return updatedItem;\r\n    }\r\n\r\n    return item;\r\n  });\r\n\r\n  setProvincedata({ ...provincedata, [\"data\"]: newdata });\r\n  resetvalues();\r\n  setProvinceModalPopUp(!provincemodalpopup);\r\n  notify(1,`Data save successfully.`);\r\n};\r\n\r\n\r\n const savedata = () => {\r\n  //vaildation\r\n  var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n     \r\n  if(state.description.length==0){\r\n    notify(2,\"Please enter description !\");\r\n  }else if(selectedcountryvalue==0){\r\n    notify(2,\"Please select country !\");\r\n  }else{\r\n     \r\n    dataservice(\"province\",{ requestfor: 'province' ,\r\n    data:{flag:state.id==\"\"?\"i\":'u',description:state.description,countryid:selectedcountryvalue,\r\n    loggedinid:loginuser.id,isactive:state.isactive,id:state.id}})\r\n    .then(function(data) {\r\n       ;\r\n      if(data.resultkey==1){\r\n        if(state.id!=\"\"){\r\n          \r\n          onUpdateItem(state.id);\r\n\r\n        }else{\r\n            var result=data.resultvalue;\r\n            var countryname=countrydata.filter(x=>x.value==selectedcountryvalue);\r\n\r\n            var newuser={\r\n              \"id\" : result.rowid,\r\n              \"description\" : state.description,\r\n              \"isactive\":\"1\",\r\n              \"countryid\":selectedcountryvalue,\r\n              \"country\":countryname.length>0?countryname[0].label:\"\"\r\n            };\r\n\r\n\r\n            setProvincedata({ ...provincedata, [\"data\"]: [...provincedata.data,newuser ] });\r\n            resetvalues();\r\n            notify(1,`Data save successfully.`);\r\n        }\r\n       \r\n      \r\n      }else{\r\n\r\n      }\r\n    })\r\n    .catch(function(error){\r\n       \r\n    })\r\n  }\r\n \r\n };\r\n\r\n useEffect(()=>{\r\n   \r\n  getprovincedata();\r\n  getcountrydata();\r\n  resetvalues();\r\n  \r\n},[])\r\n\r\n\r\n\r\nconst getprovincedata=()=>{\r\n      ;\r\n  dataservice(\"province\",{ requestfor: 'getprovince' ,data:{flag:'a'}})\r\n  .then(function(data) {\r\n    if(data.resultkey==1){\r\n      var result=data.resultvalue;\r\n       ;\r\n      setProvincedata({ ...provincedata, [\"data\"]: result });\r\n\r\n      //setProvincedata({ ...provincedata, [\"data\"]: [...provincedata.data, result[0]] });\r\n      \r\n    }else{\r\n      //notify(2,\"Invaild username/password\");\r\n    }\r\n        \r\n    })\r\n    .catch(function(edata){\r\n        notify(2,edata.toString(),1);\r\n        //console.log(' movies:', edata);\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\nconst getcountrydata=()=>{\r\n  dataservice(\"country\",{ requestfor: 'getcountry' ,data:{flag:'actv'}})\r\n  .then(function(data) {\r\n        ;\r\n    if(data.resultkey==1){\r\n      var result=data.resultvalue;\r\n     \r\n      if(result.length>0){\r\n        let seelectroledata=[{\r\n          value: 0,\r\n          label: \"Select Country\"\r\n        }];\r\n        for (let index = 0; index < result.length; index++) {\r\n          const element = result[index];\r\n          if(element.isactive){\r\n            seelectroledata.push({\r\n              value: parseInt(element.id),\r\n              label: element.description\r\n            })\r\n          }\r\n          \r\n        }\r\n        setCountrydata(seelectroledata);\r\n        console.log(seelectroledata);\r\n      }\r\n   \r\n       \r\n      \r\n    }else{\r\n      //notify(2,\"Invaild username/password\");\r\n    }\r\n        \r\n    })\r\n    .catch(function(edata){\r\n        notify(2,edata.toString(),1);\r\n        //console.log(' movies:', edata);\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n const openpopup=()=>{\r\n  resetvalues();\r\n  setProvinceModalPopUp(!provincemodalpopup);\r\n }\r\n\r\n const resetvalues=()=>{\r\n  setSelectedCountryValue(0);\r\n  setState(prevState => ({\r\n    ...prevState,\r\n    description: \"\",\r\n    id:\"\",\r\n    isactive:true,\r\n  }));\r\n  \r\n\r\n\r\n }\r\n\r\n\r\n\r\n const handleChangeOption = e => {\r\n  setSelectedCountryValue(e.value);\r\n}\r\n \r\n\r\n\r\n  return (\r\n    <>\r\n   <CRow>\r\n      <CCol xl={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol xl={6}>\r\n                Province\r\n                <small className=\"text-muted\"> Master</small>\r\n              </CCol>\r\n                <CCol xl={6} style={{textAlign:\"end\"}}>\r\n                <CButton\r\n                    onClick={() => openpopup('n',{})}\r\n                    className=\"mr-1\"\r\n                    color=\"primary\"\r\n                \r\n                  >\r\n                    Add New\r\n                \r\n                  </CButton>\r\n            \r\n              </CCol>\r\n            </CRow>\r\n            \r\n           \r\n         \r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <CModal show={provincemodalpopup} onClose={() => setProvinceModalPopUp(!provincemodalpopup)} size=\"lg\">\r\n              <CModalHeader closeButton>\r\n              <CModalTitle>Province </CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCol md=\"12\">\r\n                  <CForm>\r\n                    <CRow >\r\n                    <CCol xs=\"6\">\r\n                      <CFormGroup row>\r\n                          <CCol xs=\"12\" >\r\n                          <Select\r\n                              className=\"dropdown\"\r\n                              placeholder=\"Select Role\"\r\n                              value={countrydata.find(obj => obj.value === selectedcountryvalue)} // set selected values\r\n                              options={countrydata} // set list of the data\r\n                              onChange={handleChangeOption} // assign onChange function\r\n                            />\r\n                          </CCol>\r\n                      </CFormGroup>\r\n                       \r\n                      </CCol>\r\n                 \r\n                      <CCol xs=\"6\" className=\"text-right\">\r\n                        <CInputGroup className=\"mb-3\">\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText>\r\n                              <CIcon name=\"cil-envelope-letter\" style={{ color: \"red\" }} /><sup style={{ color: \"red\" }}>*</sup>\r\n                            </CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CInput onChange={handleChange} type=\"text\" value={state.description} id=\"description\" placeholder=\"Enter Province\" />\r\n                        </CInputGroup>\r\n                      </CCol>\r\n                   \r\n                    </CRow>\r\n                 \r\n                    <CRow>\r\n                    <CCol xs=\"6\">\r\n                        <CFormGroup row>\r\n                         \r\n                          <CCol md=\"9\"  style={{display:state.id==\"\"?\"none\":\"\"}}>\r\n                           \r\n                            <CFormGroup variant=\"custom-checkbox\" inline>\r\n                              <CInputCheckbox custom id=\"isactive\" name=\"inline-checkbox2\" value={state.isactive==0?false:true} checked={state.isactive==0?false:true}   onChange={handleChange}/>\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"isactive\">Active</CLabel>\r\n                            </CFormGroup>\r\n                            {/* <CFormGroup variant=\"custom-checkbox\" inline>\r\n                              <CInputCheckbox custom id=\"investoruser\" name=\"inline-checkbox3\" checked={state.investoruser} value={state.investoruser} onChange={handleChange} />\r\n                              <CLabel variant=\"custom-checkbox\" htmlFor=\"investoruser\">Investor User</CLabel>\r\n                            </CFormGroup> */}\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                      </CCol>\r\n                    \r\n                    </CRow>\r\n                  </CForm>\r\n\r\n                </CCol>\r\n\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" disabled={disabledbtn}  onClick={() => savedata()}>Save</CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() => setProvinceModalPopUp(!provincemodalpopup)}>Cancel</CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n\r\n          <DataTableExtensions\r\n      {...provincedata}\r\n    >\r\n        \r\n\r\n      <DataTable\r\n        noHeader\r\n        defaultSortField=\"id\"\r\n        defaultSortAsc={false}\r\n        pagination\r\n        highlightOnHover\r\n       \r\n      />\r\n    </DataTableExtensions>\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n      </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Province\r\n","import common from '../common/common';\r\nconst dataservice = async (controller, reqbody) => {\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(reqbody)\r\n  };\r\n  //common.baseurl +;\r\n  // https://maubantourism.smartpay.ph/\r\n  // https://tourism-test.smartpay.ph/\r\n  const url = \"https://maubantourism.smartpay.ph/tourbookingphp/\" + controller + \".php\"\r\n  return await fetch(url, requestOptions)\r\n    .then(async response => {\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      } else {\r\n        return data;\r\n      }\r\n\r\n    })\r\n    .catch(error => {\r\n      return Promise.reject(error);\r\n    });\r\n\r\n}\r\n\r\nexport default dataservice","var readJson = require('read-package-json')\r\nvar data = require('../../../package.json')\r\nvar _host = \"\";\r\n_host = \"https://maubantourism.smartpay.ph\";\r\nlet commondata;\r\nif (data.mode == \"dev\") {\r\n  commondata = {\r\n    fileuploadurl: \"/tourbookingphp/upload.php\",\r\n    guesttemplate: _host + \"/tourbookingphp/guesttemplate.xlsx\",\r\n    //  filepath:_host+\"/tourbooking/uploads/\",\r\n    baseurl: _host + \"/tourbookingphp/\",\r\n  }\r\n} else {\r\n\r\n  commondata = {\r\n    fileuploadurl: \"/tourbookingphp/upload.php\",\r\n    guesttemplate: \"/tourbookingphp/guesttemplate.xlsx\",\r\n    //  filepath:_host+\"/tourbooking/uploads/\",\r\n    baseurl: \"/tourbookingphp/\",\r\n  }\r\n}\r\n\r\n// _host=window.location.host;\r\n//  const commondata = {\r\n//      fileuploadurl:_host+\"/tourbookingphp/upload.php\",\r\n//     //  filepath:_host+\"/tourbooking/uploads/\",\r\n//      baseurl: _host+\"/tourbookingphp/\", \r\n//  }\r\n//live\r\n// const commondata = {\r\n//     fileuploadurl:\"/tourbookingphp/upload.php\",\r\n//    //  filepath:_host+\"/tourbooking/uploads/\",\r\n//     baseurl: \"/tourbookingphp/\", \r\n// }\r\n//staging\r\n// const commondata = {\r\n//     fileuploadurl:\"/tourbookingphp/upload.php\",\r\n//    //  filepath:_host+\"/tourbooking/uploads/\",\r\n//     baseurl: _host+\"/tourbookingphp/\", \r\n// }\r\n\r\n\r\n//  const commondata = {\r\n//          fileuploadurl:\"/investorportalphp/upload.php\",\r\n//          filepath:\"/investorportalphp/uploads/\",\r\n//          baseurl: \"/investorportalphp/api.php\", \r\n//      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default commondata\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}