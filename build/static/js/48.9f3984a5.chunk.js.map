{"version":3,"sources":["views/municipality/municipality.js","views/service/dataservice.js","views/common/common.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["notify","type","message","systemerror","toast","success","position","POSITION","TOP_CENTER","dtlmsg","undefined","error","name","Municipality","columns","selector","sortable","cell","d","color","isactive","ignoreRowClick","row","onClick","e","editdata","className","data","loginuser","localStorage","getItem","JSON","parse","queryPage","useHistory","useLocation","search","match","currentPage","Number","useState","municipalitymodalpopup","setMunicipalityModalPopUp","disabledbtn","municipalitydata","setMunicipalitydata","countrydata","setCountrydata","selectedcountryvalue","setSelectedCountryValue","provincedata","setProvincedata","selectedprovincevalue","setSelectedProvinceValue","isprovincedisabled","setProvincedisabled","description","id","state","setState","console","log","prevState","parseInt","countryid","provinceid","handleChange","target","value","checked","savedata","RegExp","length","dataservice","requestfor","flag","loggedinid","then","resultkey","i","countryname","filter","x","provincename","newdata","map","item","country","label","province","resetvalues","onUpdateItem","result","resultvalue","newuser","rowid","catch","useEffect","getmunicipalitydata","getprovincedata","getcountrydata","edata","toString","seelectprovincedata","index","element","push","seelectroledata","xl","style","textAlign","show","onClose","size","closeButton","md","xs","placeholder","find","obj","options","onChange","isDisabled","display","variant","inline","custom","htmlFor","disabled","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover","controller","reqbody","a","requestOptions","method","headers","body","stringify","url","fetch","response","json","ok","status","Promise","reject","_host","commondata","require","mode","fileuploadurl","guesttemplate","baseurl","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/48.9f3984a5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CModal,\r\n  CModalTitle,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CForm,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CInputGroup,\r\n  CInput,\r\n  CFormGroup,\r\n  CInputCheckbox,\r\n  CLabel,\r\n  CModalFooter,\r\n  CBadge\r\n} from '@coreui/react'\r\n\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport Select from 'react-select';\r\nimport CIcon from '@coreui/icons-react';\r\nimport dataservice from '../service/dataservice';\r\nimport {  toast } from 'react-toastify';\r\n\r\n\r\nconst notify=(type,message,systemerror)=>{\r\n  switch (type) {\r\n    case 1:\r\n      toast.success(message, {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      break;\r\n    case 2:\r\n      var dtlmsg;\r\n      if(systemerror!==undefined){\r\n      dtlmsg=<div>Please contact to administrator!<br></br>{message}</div>;\r\n      }else{\r\n        dtlmsg=<div>{message}</div>;\r\n      }\r\n\r\n      toast.error(<div>\r\n         <CIcon name=\"cil-warning\" /> Error\r\n      \r\n        {dtlmsg}\r\n        \r\n      </div>, {\r\n          position: toast.POSITION.TOP_CENTER\r\n        });\r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n}\r\nconst Municipality = () => {\r\n  const columns = [\r\n    {\r\n        name: 'Country',\r\n        selector: 'country',\r\n        sortable: true,\r\n    },\r\n    {\r\n      name: 'Province',\r\n      selector: 'province',\r\n      sortable: true,\r\n    }, {\r\n        name: 'Municipality',\r\n        selector: 'description',\r\n        sortable: true,\r\n      },\r\n    // {\r\n    //   name: 'Genres',\r\n    //   selector: 'genres',\r\n    //   sortable: true,\r\n    //   cell: d => <span>{d.genres.join(', ')}</span>,\r\n    // },\r\n    // <CBadge color={getBadge(item.status)}>\r\n    //                     {item.status}\r\n    //                   </CBadge>\r\n    //<span>{d.isactive==\"1\"?\"True\":\"False\"}</span>\r\n    {\r\n      name: 'Status',\r\n      selector: 'isactive',\r\n      sortable: true,\r\n      cell: d => <CBadge color={d.isactive==\"1\"?\"success\":\"danger\"}>\r\n                          {d.isactive==\"1\"?\"Active\":\"In Active\"}\r\n                         </CBadge>,\r\n    },\r\n    {\r\n      name: 'Action',\r\n      selector: 'action',\r\n      ignoreRowClick: true,\r\n      cell: row =>  <CIcon  name=\"cil-pencil\" onClick={e => editdata(row, e)} className=\"mfe-2 custcusrsor\" />\r\n     \r\n    },\r\n  ];\r\n  const data = [];\r\n  let loginuser = localStorage.getItem('userinfo') == \"\" || undefined ? \"\" : JSON.parse(localStorage.getItem('userinfo'));\r\n\r\n  const userrawdata=[];\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  const [page, setPage] = useState(currentPage)\r\n  const [municipalitymodalpopup, setMunicipalityModalPopUp] = useState(false);\r\n  const [disabledbtn, setDisabledBtn] = useState(false);\r\n  const[municipalitydata,setMunicipalitydata]=useState({\r\n    columns,\r\n    data\r\n  });\r\n  const[countrydata,setCountrydata]=useState([]);\r\n  const[selectedcountryvalue,setSelectedCountryValue]=useState([]);\r\n\r\n  const[provincedata,setProvincedata]=useState([]);\r\n  const[selectedprovincevalue,setSelectedProvinceValue]=useState([]);\r\n  const[isprovincedisabled,setProvincedisabled]=useState(\"t\");\r\n \r\n\r\n\r\n\r\n  const pageChange = newPage => {\r\n    currentPage !== newPage && history.push(`/users?page=${newPage}`)\r\n  }\r\n  const [state, setState] = useState({\r\n    description: \"\",\r\n    id:\"\",\r\n    isactive:true,\r\n  });\r\n  \r\n  const editdata=(row, e) =>{\r\n     \r\n    console.log(row);\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      description: row.description,\r\n      id:row.id,\r\n      isactive:row.isactive,\r\n    }));\r\n     \r\n    setSelectedCountryValue(parseInt(row.countryid));\r\n    setSelectedProvinceValue(parseInt(row.provinceid));\r\n    setMunicipalityModalPopUp(!municipalitymodalpopup);\r\n  }\r\n  \r\n  const tableData = {\r\n    columns,\r\n    data,\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n  \r\n   if (e.target.type === 'checkbox' ) {\r\n     setState({...state, [id]: (e.target.checked==true?e.target.checked:false)});\r\n   } else {\r\n     setState({...state, [id]: value });\r\n   }\r\n }\r\n\r\n const onUpdateItem = i => {\r\n//  setMunicipalitydata({ ...municipalitydata, [\"data\"]: [...municipalitydata.data,newuser ] });\r\n\r\n  let countryname=countrydata.filter(x=>x.value==selectedcountryvalue);\r\n  var provincename=provincedata.filter(x=>x.value==selectedprovincevalue);\r\n\r\n  const newdata = municipalitydata[\"data\"].map((item) => {\r\n    if (item.id === i) {\r\n      const updatedItem = {\r\n        ...item,\r\n        description :state.description,\r\n        isactive: state.isactive,\r\n        countryid:selectedcountryvalue,\r\n        country:countryname.length>0?countryname[0].label:\"\",\r\n        provinceid:selectedprovincevalue,\r\n        province:provincename.length>0?provincename[0].label:\"\"\r\n\r\n      };\r\n\r\n      return updatedItem;\r\n    }\r\n\r\n    return item;\r\n  });\r\n\r\n  setMunicipalitydata({ ...municipalitydata, [\"data\"]: newdata });\r\n  resetvalues();\r\n  setMunicipalityModalPopUp(!municipalitymodalpopup);\r\n  notify(1,`Data save successfully.`);\r\n};\r\n\r\n const savedata = () => {\r\n  //vaildation\r\n  var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n     \r\n  if(state.description.length==0){\r\n    notify(2,\"Please enter description !\");\r\n  }else if(selectedcountryvalue==0){\r\n    notify(2,\"Please select country !\");\r\n  }else if(selectedprovincevalue==0){\r\n    notify(2,\"Please select province !\");\r\n  }else{\r\n     \r\n    dataservice(\"municipality\",{ requestfor: 'municipality' ,\r\n    data:{flag:state.id==\"\"?\"i\":'u',description:state.description,countryid:selectedcountryvalue,provinceid:selectedprovincevalue,\r\n    loggedinid:loginuser.id,isactive:state.isactive,id:state.id}})\r\n    .then(function(data) {\r\n       ;\r\n      if(data.resultkey==1){\r\n        if(state.id!=\"\"){\r\n          \r\n          onUpdateItem(state.id);\r\n\r\n        }else{\r\n            var result=data.resultvalue;\r\n            var countryname=countrydata.filter(x=>x.value==selectedcountryvalue);\r\n            var provincename=provincedata.filter(x=>x.value==selectedprovincevalue);\r\n\r\n            var newuser={\r\n              \"id\" : result.rowid,\r\n              \"description\" : state.description,\r\n              \"isactive\":\"1\",\r\n              \"countryid\":selectedcountryvalue,\r\n              \"country\":countryname.length>0?countryname[0].label:\"\",\r\n              \"provinceid\":selectedprovincevalue,\r\n              \"province\":provincename.length>0?provincename[0].label:\"\"\r\n            };\r\n\r\n\r\n            setMunicipalitydata({ ...municipalitydata, [\"data\"]: [...municipalitydata.data,newuser ] });\r\n            resetvalues();\r\n            notify(1,`Data save successfully.`);\r\n        }\r\n       \r\n      \r\n      }else{\r\n\r\n      }\r\n    })\r\n    .catch(function(error){\r\n       \r\n    })\r\n  }\r\n \r\n };\r\n\r\n useEffect(()=>{\r\n  getmunicipalitydata();\r\n  getprovincedata();\r\n  getcountrydata();\r\n  resetvalues();\r\n},[])\r\n\r\nconst getmunicipalitydata=()=>{\r\n    dataservice(\"municipality\",{ requestfor: 'getmunicipality' ,data:{flag:'a'}})\r\n    .then(function(data) {\r\n      if(data.resultkey==1){\r\n        var result=data.resultvalue;\r\n         ;\r\n        setMunicipalitydata({ ...municipalitydata, [\"data\"]: result });\r\n  \r\n        //setMunicipalitydata({ ...municipalitydata, [\"data\"]: [...municipalitydata.data, result[0]] });\r\n        \r\n      }else{\r\n        //notify(2,\"Invaild username/password\");\r\n      }\r\n          \r\n      })\r\n      .catch(function(edata){\r\n          notify(2,edata.toString(),1);\r\n          //console.log(' movies:', edata);\r\n      });\r\n\r\n\r\n\r\n}\r\n\r\nconst getprovincedata=()=>{\r\n      ;\r\n    dataservice(\"province\",{ requestfor: 'getprovince' ,data:{flag:'actv'}})\r\n    .then(function(data) {\r\n          ;\r\n      if(data.resultkey==1){\r\n        var result=data.resultvalue;\r\n       \r\n        if(result.length>0){\r\n          let seelectprovincedata=[{\r\n            value: 0,\r\n            label: \"Select Province\"\r\n          }];\r\n          for (let index = 0; index < result.length; index++) {\r\n            const element = result[index];\r\n            if(element.isactive){\r\n                seelectprovincedata.push({\r\n                value: parseInt(element.id),\r\n                label: element.description\r\n              })\r\n            }\r\n            \r\n          }\r\n          setProvincedata(seelectprovincedata);\r\n          console.log(seelectprovincedata);\r\n        }\r\n     \r\n         \r\n        \r\n      }else{\r\n        //notify(2,\"Invaild username/password\");\r\n      }\r\n          \r\n      })\r\n      .catch(function(edata){\r\n          notify(2,edata.toString(),1);\r\n          //console.log(' movies:', edata);\r\n      });\r\n  \r\n\r\n\r\n\r\n}\r\n\r\nconst getprovincedatabyid=()=>{\r\n      ;\r\n    dataservice(\"province\",{ requestfor: 'getprovince' ,data:{flag:'bycountryid',countryid:selectedcountryvalue}})\r\n    .then(function(data) {\r\n          ;\r\n      if(data.resultkey==1){\r\n        var result=data.resultvalue;\r\n       \r\n        if(result.length>0){\r\n            setProvincedisabled(\"f\");\r\n          let seelectprovincedata=[{\r\n            value: 0,\r\n            label: \"Select Province\"\r\n          }];\r\n          for (let index = 0; index < result.length; index++) {\r\n            const element = result[index];\r\n            if(element.isactive){\r\n                seelectprovincedata.push({\r\n                value: parseInt(element.id),\r\n                label: element.description\r\n              })\r\n            }\r\n            \r\n          }\r\n          setProvincedata(seelectprovincedata);\r\n          console.log(seelectprovincedata);\r\n        }\r\n     \r\n         \r\n        \r\n      }else{\r\n        //notify(2,\"Invaild username/password\");\r\n      }\r\n          \r\n      })\r\n      .catch(function(edata){\r\n          notify(2,edata.toString(),1);\r\n          //console.log(' movies:', edata);\r\n      });\r\n  \r\n\r\n\r\n\r\n}\r\n\r\nconst getcountrydata=()=>{\r\n  dataservice(\"country\",{ requestfor: 'getcountry' ,data:{flag:'actv'}})\r\n  .then(function(data) {\r\n        ;\r\n    if(data.resultkey==1){\r\n      var result=data.resultvalue;\r\n     \r\n      if(result.length>0){\r\n        let seelectroledata=[{\r\n          value: 0,\r\n          label: \"Select Country\"\r\n        }];\r\n        for (let index = 0; index < result.length; index++) {\r\n          const element = result[index];\r\n          if(element.isactive){\r\n            seelectroledata.push({\r\n              value: parseInt(element.id),\r\n              label: element.description\r\n            })\r\n          }\r\n          \r\n        }\r\n        setCountrydata(seelectroledata);\r\n        console.log(seelectroledata);\r\n      }\r\n   \r\n       \r\n      \r\n    }else{\r\n      //notify(2,\"Invaild username/password\");\r\n    }\r\n        \r\n    })\r\n    .catch(function(edata){\r\n        notify(2,edata.toString(),1);\r\n        //console.log(' movies:', edata);\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\n const openpopup=()=>{\r\n  resetvalues();\r\n  setMunicipalityModalPopUp(!municipalitymodalpopup);\r\n }\r\n\r\n const resetvalues=()=>{\r\n  setSelectedCountryValue(0);\r\n  setSelectedProvinceValue(0);\r\n  setProvincedisabled(\"t\");\r\n  setState(prevState => ({\r\n    ...prevState,\r\n    description: \"\",\r\n    id:\"\",\r\n    isactive:true,\r\n  }));\r\n  \r\n\r\n\r\n }\r\n\r\n const handleChangeOption = e => {\r\n   \r\n  setSelectedCountryValue(e.value);\r\n}\r\nconst handleChangeOptionProvince=e=>{\r\n\r\n    setSelectedProvinceValue(e.value);\r\n}\r\n \r\nuseEffect(()=>{\r\n    if(selectedcountryvalue!=\"\"){\r\n        if(selectedcountryvalue==0){\r\n            setProvincedisabled(\"t\");\r\n            let seelectprovincedata=[{\r\n                value: 0,\r\n                label: \"Select Province\"\r\n            }];\r\n            setProvincedata(seelectprovincedata);\r\n            setSelectedProvinceValue(0);\r\n         \r\n        }else{\r\n            getprovincedatabyid();\r\n        }\r\n\r\n    }else{\r\n        setProvincedisabled(\"t\");\r\n        let seelectprovincedata=[{\r\n            value: 0,\r\n            label: \"Select Province\"\r\n        }];\r\n        setProvincedata(seelectprovincedata);\r\n        setSelectedProvinceValue(0);\r\n\r\n    }\r\n    \r\n},[selectedcountryvalue])\r\n\r\n\r\n  return (\r\n    <>\r\n   <CRow>\r\n      <CCol xl={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol xl={6}>\r\n                Municipality \r\n                <small className=\"text-muted\"> Master</small>\r\n              </CCol>\r\n                <CCol xl={6} style={{textAlign:\"end\"}}>\r\n                <CButton\r\n                    onClick={() => openpopup('n',{})}\r\n                    className=\"mr-1\"\r\n                    color=\"primary\"\r\n                \r\n                  >\r\n                    Add New\r\n                \r\n                  </CButton>\r\n            \r\n              </CCol>\r\n            </CRow>\r\n            \r\n           \r\n         \r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <CModal show={municipalitymodalpopup} onClose={() => setMunicipalityModalPopUp(!municipalitymodalpopup)} size=\"lg\">\r\n              <CModalHeader closeButton>\r\n              <CModalTitle>Municipality </CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCol md=\"12\">\r\n                  <CForm>\r\n                    <CRow >\r\n                    <CCol xs=\"6\">\r\n                      <CFormGroup row>\r\n                          <CCol xs=\"12\" >\r\n                          <Select\r\n                              className=\"dropdown\"\r\n                              placeholder=\"Select Role\"\r\n                              value={countrydata.find(obj => obj.value === selectedcountryvalue)} // set selected values\r\n                              options={countrydata} // set list of the data\r\n                              onChange={handleChangeOption} // assign onChange function\r\n                            />\r\n                          </CCol>\r\n                      </CFormGroup>\r\n                       \r\n                      </CCol>\r\n                      <CCol xs=\"6\">\r\n                      <CFormGroup row>\r\n                          <CCol xs=\"12\" >\r\n                              \r\n                          <Select\r\n                              isDisabled={isprovincedisabled==\"t\"?true:false}\r\n                              className=\"dropdown\"\r\n                              placeholder=\"Select Provice\"\r\n                              value={provincedata.find(obj => obj.value === selectedprovincevalue)} // set selected values\r\n                              options={provincedata} // set list of the data\r\n                              onChange={handleChangeOptionProvince} // assign onChange function\r\n                            />\r\n                          </CCol>\r\n                      </CFormGroup>\r\n                       \r\n                      </CCol>\r\n                 \r\n                    \r\n                    </CRow>\r\n                    <CRow>\r\n                    <CCol xs=\"6\" className=\"text-right\">\r\n                        <CInputGroup className=\"mb-3\">\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText>\r\n                              <CIcon name=\"cil-envelope-letter\" style={{ color: \"red\" }} /><sup style={{ color: \"red\" }}> * </sup>\r\n                            </CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CInput onChange={handleChange} type=\"text\" value={state.description} id=\"description\" placeholder=\"Enter Municipality\" />\r\n                        </CInputGroup>\r\n                      </CCol>\r\n                   \r\n                    </CRow>\r\n                    <CRow>\r\n                    <CCol xs=\"6\">\r\n                        <CFormGroup row>\r\n                         \r\n                          <CCol md=\"9\"  style={{display:state.id==\"\"?\"none\":\"\"}}>\r\n                           \r\n                            <CFormGroup variant=\"custom-checkbox\" inline>\r\n                              <CInputCheckbox custom id=\"isactive\" name=\"inline-checkbox2\" value={state.isactive==0?false:true} checked={state.isactive==0?false:true}   onChange={handleChange}/>\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"isactive\">Active</CLabel>\r\n                            </CFormGroup>\r\n                            {/* <CFormGroup variant=\"custom-checkbox\" inline>\r\n                              <CInputCheckbox custom id=\"investoruser\" name=\"inline-checkbox3\" checked={state.investoruser} value={state.investoruser} onChange={handleChange} />\r\n                              <CLabel variant=\"custom-checkbox\" htmlFor=\"investoruser\">Investor User</CLabel>\r\n                            </CFormGroup> */}\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                      </CCol>\r\n                    \r\n                    </CRow>\r\n                  </CForm>\r\n\r\n                </CCol>\r\n\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" disabled={disabledbtn}  onClick={() => savedata()}>Save</CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() => setMunicipalityModalPopUp(!municipalitymodalpopup)}>Cancel</CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n\r\n          <DataTableExtensions\r\n      {...municipalitydata}\r\n    >\r\n        \r\n\r\n      <DataTable\r\n        noHeader\r\n        defaultSortField=\"id\"\r\n        defaultSortAsc={false}\r\n        pagination\r\n        highlightOnHover\r\n       \r\n      />\r\n    </DataTableExtensions>\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Municipality\r\n","import common from '../common/common';\r\nconst dataservice = async (controller, reqbody) => {\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(reqbody)\r\n  };\r\n  //common.baseurl +;\r\n  // https://maubantourism.smartpay.ph/\r\n  // https://tourism-test.smartpay.ph/\r\n  const url = \"https://maubantourism.smartpay.ph/tourbookingphp/\" + controller + \".php\"\r\n  return await fetch(url, requestOptions)\r\n    .then(async response => {\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      } else {\r\n        return data;\r\n      }\r\n\r\n    })\r\n    .catch(error => {\r\n      return Promise.reject(error);\r\n    });\r\n\r\n}\r\n\r\nexport default dataservice","var readJson = require('read-package-json')\r\nvar data = require('../../../package.json')\r\nvar _host = \"\";\r\n_host = \"https://maubantourism.smartpay.ph\";\r\nlet commondata;\r\nif (data.mode == \"dev\") {\r\n  commondata = {\r\n    fileuploadurl: \"/tourbookingphp/upload.php\",\r\n    guesttemplate: _host + \"/tourbookingphp/guesttemplate.xlsx\",\r\n    //  filepath:_host+\"/tourbooking/uploads/\",\r\n    baseurl: _host + \"/tourbookingphp/\",\r\n  }\r\n} else {\r\n\r\n  commondata = {\r\n    fileuploadurl: \"/tourbookingphp/upload.php\",\r\n    guesttemplate: \"/tourbookingphp/guesttemplate.xlsx\",\r\n    //  filepath:_host+\"/tourbooking/uploads/\",\r\n    baseurl: \"/tourbookingphp/\",\r\n  }\r\n}\r\n\r\n// _host=window.location.host;\r\n//  const commondata = {\r\n//      fileuploadurl:_host+\"/tourbookingphp/upload.php\",\r\n//     //  filepath:_host+\"/tourbooking/uploads/\",\r\n//      baseurl: _host+\"/tourbookingphp/\", \r\n//  }\r\n//live\r\n// const commondata = {\r\n//     fileuploadurl:\"/tourbookingphp/upload.php\",\r\n//    //  filepath:_host+\"/tourbooking/uploads/\",\r\n//     baseurl: \"/tourbookingphp/\", \r\n// }\r\n//staging\r\n// const commondata = {\r\n//     fileuploadurl:\"/tourbookingphp/upload.php\",\r\n//    //  filepath:_host+\"/tourbooking/uploads/\",\r\n//     baseurl: _host+\"/tourbookingphp/\", \r\n// }\r\n\r\n\r\n//  const commondata = {\r\n//          fileuploadurl:\"/investorportalphp/upload.php\",\r\n//          filepath:\"/investorportalphp/uploads/\",\r\n//          baseurl: \"/investorportalphp/api.php\", \r\n//      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default commondata\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}