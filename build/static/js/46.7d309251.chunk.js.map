{"version":3,"sources":["views/book/BookingHistory.js","views/service/dataservice.js","views/commoncomponents/inputdecimal.jsx","views/common/common.js"],"names":["notify","type","message","systemerror","toast","success","position","POSITION","TOP_CENTER","dtlmsg","undefined","error","name","url","BookingHistory","columns","selector","sortable","cell","d","src","qrcode","height","alt","ignoreRowClick","row","style","display","editable","onClick","e","editdata","className","viewbooking","data","loginuser","localStorage","getItem","JSON","parse","useState","Date","queryPage","useHistory","useLocation","search","match","currentPage","Number","bookingeditmodalpopup","setBookingEditModalPopUp","bookingviewmodalpopup","setBookingViewModalPopUp","disabledbtn","setCitizenship","Province","setProvince","Municipality","setMunicipality","country","setCountry","RawProvince","setRawProvince","RawMunicipality","setRawMunicipality","Gender","setGender","bookingdata","setBookingdata","description","id","isactive","touristinfo","state","setState","console","log","prevState","todate","fromdate","totalcharge","gettouristbyregistrationid","handleChange","target","value","prop","index","length","element","uuid","useEffect","getregistrationdata","getCitizenship","getCountry","getProvince","getMunicipalities","getGender","resetvalues","countdata","push","label","onChangeFromDate","onChangeToDate","registerid","popupfor","dataservice","requestfor","reg","then","resultkey","result","resultvalue","catch","edata","toString","price","flag","item","Provincedata","getdropdownarr","Municipalitydata","handleChangeOptionGender","onChangeTouristDate","cusdate","getFullYear","getMonth","getDate","handleChangeOptionCountry","handleChangeOptionProvince","handleChangeOptionMunicipality","xl","textAlign","show","onClose","size","closeButton","md","xs","readOnly","dateFormat","minDate","selected","onChange","date","htmlFor","width","rows","i","_touristinfo","_country","filter","x","nationalityid","_province","provinceid","_municipality","municipalityid","firstname","placeholder","lastname","dob","find","obj","parseFloat","gender","options","color","disabled","saved","loggedinid","registratoinid","touristdata","savedata","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover","controller","reqbody","a","requestOptions","method","headers","body","stringify","fetch","response","json","ok","status","Promise","reject","InputDecimal","change","start","selectionStart","val","replace","exec","input","toFixed","setSelectionRange","readonly","onBlur","this","blur","props","React","Component","_host","commondata","require","mode","fileuploadurl","guesttemplate","baseurl"],"mappings":"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","file":"static/js/46.7d309251.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CModal,\r\n  CModalTitle,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CForm,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CInputGroup,\r\n  CInput,\r\n  CFormGroup,\r\n  CInputCheckbox,\r\n  CLabel,\r\n  CModalFooter,\r\n  CBadge,\r\n  CImg\r\n} from '@coreui/react'\r\n\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport Select from 'react-select';\r\nimport CIcon from '@coreui/icons-react';\r\nimport dataservice from '../service/dataservice';\r\nimport {  toast } from 'react-toastify';\r\nimport { InputDecimal } from \"../commoncomponents/inputdecimal\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\nimport uuid from 'react-uuid';\r\n\r\nconst notify=(type,message,systemerror)=>{\r\n  switch (type) {\r\n    case 1:\r\n      toast.success(message, {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      break;\r\n    case 2:\r\n      var dtlmsg;\r\n      if(systemerror!==undefined){\r\n      dtlmsg=<div>Please contact to administrator!<br></br>{message}</div>;\r\n      }else{\r\n        dtlmsg=<div>{message}</div>;\r\n      }\r\n\r\n      toast.error(<div>\r\n         <CIcon name=\"cil-warning\" /> Error\r\n      \r\n        {dtlmsg}\r\n        \r\n      </div>, {\r\n          position: toast.POSITION.TOP_CENTER\r\n        });\r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n}\r\nvar url=\"https://maubantourism.smartpay.ph/tourbookingphp/tempdata/\";\r\n//var url=\"https://tourism-test.smartpay.ph/tourbookingphp/tempdata/\";\r\nconst BookingHistory = () => {\r\n  const columns = [\r\n    {\r\n      name: 'From Date',\r\n      selector: 'fromdate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'To Date',\r\n      selector: 'todate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Pax',\r\n      selector: 'pax',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Day Count',\r\n    //   selector: 'numberofdays',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Vehicle Count',\r\n    //   selector: 'numberofvehicle',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Charge',\r\n      selector: 'totalcharge',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Transcation Id',\r\n      selector: 'paymentreferencenumber',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Qr Code',\r\n     \r\n      sortable: true,\r\n      cell: d =>  <CImg\r\n                    src={url+d.qrcode}\r\n                    height=\"50\"\r\n                    alt=\"qrcode\"\r\n                  />,\r\n    },\r\n    {\r\n      name: 'Action',\r\n      selector: 'action',\r\n      ignoreRowClick: true,\r\n      cell: row =>  <>\r\n      <div style={{display:row.editable==\"0\"?\"none\":\"\"}}><CIcon name=\"cil-pencil\" onClick={e => editdata(row, e)} className=\"mfe-2 custcusrsor\" /></div> \r\n      <div> <CIcon  name=\"cil-magnifying-glass\" onClick={e => viewbooking(row, e)} className=\"mfe-2 custcusrsor\" /></div>\r\n      </>\r\n                    \r\n     \r\n    },\r\n  ];\r\n  const data = [];\r\n  let loginuser = localStorage.getItem('userinfo') == \"\" || undefined ? \"\" : JSON.parse(localStorage.getItem('userinfo'));\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  const [page, setPage] = useState(currentPage)\r\n  const [bookingeditmodalpopup, setBookingEditModalPopUp] = useState(false);\r\n  const [bookingviewmodalpopup, setBookingViewModalPopUp] = useState(false);\r\n  const [disabledbtn, setDisabledBtn] = useState(false);\r\n\r\n  const [citizenship, setCitizenship] = useState([]);\r\n  const [Province, setProvince] = useState([]);\r\n  const [Municipality, setMunicipality] = useState([]);\r\n  const [country, setCountry] = useState([]);\r\n  const [RawProvince, setRawProvince] = useState([]);\r\n  const [RawMunicipality, setRawMunicipality] = useState([]);\r\n  const [Gender, setGender] = useState([]);\r\n\r\n  const[bookingdata,setBookingdata]=useState({\r\n    columns,\r\n    data\r\n  });\r\n  \r\n\r\n\r\n  const pageChange = newPage => {\r\n    currentPage !== newPage && history.push(`/users?page=${newPage}`)\r\n  }\r\n  const [state, setState] = useState({\r\n    description: \"\",\r\n    id:\"\",\r\n    isactive:true,\r\n    touristinfo:[],\r\n  });\r\n  \r\n  const editdata=(row, e) =>{\r\n     \r\n    console.log(row);\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      todate: new Date(row.todate),\r\n      fromdate: new Date(row.fromdate),\r\n      totalcharge: row.totalcharge,\r\n      id:row.id,\r\n      qrcode:row.qrcode,\r\n      touristinfo:[]\r\n    }));\r\n    gettouristbyregistrationid(row.id,'e');\r\n   \r\n  }\r\n const viewbooking=(row, e)=>{\r\n  console.log(row);\r\n  setState(prevState => ({\r\n    ...prevState,\r\n    todate: new Date(row.todate),\r\n    fromdate: new Date(row.fromdate),\r\n    totalcharge: row.totalcharge,\r\n    id:row.id,\r\n    qrcode:row.qrcode,\r\n    touristinfo:[]\r\n  }));\r\n  gettouristbyregistrationid(row.id,'v');\r\n \r\n }\r\n  \r\n  const tableData = {\r\n    columns,\r\n    data,\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n   \r\n    const { id, value } = e.target;\r\n    console.log(id);\r\n     \r\n  //  if (e.target.type === 'checkbox' ) {\r\n  //    setState({...state, [id]: (e.target.checked==true?e.target.checked:false)});\r\n  //  } else {\r\n  //    setState({...state, [id]: value });\r\n  //  }\r\n  // const newdata = state[\"touristinfo\"].map((item) => {\r\n  //   if (item.uuid === id) {\r\n  //     const updatedItem = {\r\n  //       ...item,\r\n  //       firstname:value\r\n  //     };\r\n\r\n  //     return updatedItem;\r\n  //   }\r\n\r\n  //   return item;\r\n  // });\r\n    var prop=e.target.name;\r\n    for (let index = 0; index < state[\"touristinfo\"].length; index++) {\r\n      const element = state[\"touristinfo\"][index];\r\n      if(element.uuid==id){\r\n        element[prop]=value;\r\n         \r\n    //    element.value=\r\n      }\r\n   \r\n    }\r\n\r\n\r\n  setState({...state, [\"touristinfo\"]: state[\"touristinfo\"] });\r\n // setBookingdata({ ...bookingdata, [\"data\"]: newdata });\r\n }\r\n\r\n const onUpdateItem = i => {\r\n\r\n  const newdata = bookingdata[\"data\"].map((item) => {\r\n    if (item.id === i) {\r\n      const updatedItem = {\r\n        ...item,\r\n        description:state.description,\r\n        isactive: state.isactive==true?\"1\":\"0\",\r\n      };\r\n\r\n      return updatedItem;\r\n    }\r\n\r\n    return item;\r\n  });\r\n\r\n  setBookingdata({ ...bookingdata, [\"data\"]: newdata });\r\n  resetvalues();\r\n  setBookingEditModalPopUp(!bookingeditmodalpopup);\r\n  notify(1,`Data save successfully.`);\r\n};\r\n\r\n\r\n const savedata = () => {\r\n  //vaildation\r\n   \r\n  \r\n  var saved={loggedinid:loginuser.id,registratoinid:state.id, touristdata:state.touristinfo};\r\n  console.log(saved);\r\n  dataservice(\"booking\", {\r\n    requestfor: 'updatetourist',\r\n    data: saved\r\n  })\r\n  .then(function (data) {\r\n    \r\n    if (data.resultkey == 1) {\r\n      setBookingEditModalPopUp(!bookingeditmodalpopup);\r\n      notify(1,`Data save successfully.`);\r\n    } else {\r\n      console.log(\"error\");\r\n    }\r\n\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  })\r\n \r\n };\r\n\r\n useEffect(()=>{\r\n   \r\n    getregistrationdata();\r\n    getCitizenship();\r\n    getCountry();\r\n    getProvince();\r\n    getMunicipalities();\r\n    getGender();\r\n    resetvalues();\r\n  \r\n},[])\r\nconst getGender = () => {\r\n  let countdata = [];\r\n  let country = [\"Male\", \"Female\", \"Other\"]\r\n  for (let index = 0; index < 3; index++) {\r\n    countdata.push({\r\n      value: index,\r\n      label: country[index]\r\n    })\r\n\r\n  }\r\n  setGender(countdata);\r\n}\r\nconst onChangeFromDate=e=>{\r\n \r\n  setState(prevState => ({\r\n    ...prevState,\r\n   \r\n    fromdate: e,\r\n    todate: e\r\n   \r\n  }));\r\n \r\n}\r\nconst onChangeToDate=e=>{\r\n  console.log(e);\r\n  setState(prevState => ({\r\n    ...prevState,\r\n   \r\n    todate: e\r\n   \r\n  }));\r\n}\r\n\r\n\r\nconst gettouristbyregistrationid=(registerid,popupfor)=>{\r\n    \r\n  dataservice(\"tour\",{ requestfor: 'gettouristbyregid' ,data:{reg:registerid}})\r\n  .then(function(data) {\r\n    if(data.resultkey==1){\r\n      var result=data.resultvalue;\r\n\r\n      for (let index = 0; index < result.length; index++) {\r\n        const element = result[index];\r\n        element.uuid=uuid();\r\n      }\r\n\r\n\r\n\r\n\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        touristinfo:result\r\n      }));\r\n      if(popupfor==\"e\"){\r\n        setBookingEditModalPopUp(!bookingeditmodalpopup);\r\n      }else{\r\n        setBookingViewModalPopUp(!bookingviewmodalpopup);\r\n      }\r\n     \r\n       //setBookingdata({ ...bookingdata, [\"data\"]: result });\r\n      \r\n    }else{\r\n    //  notify(2,\"No data found\");\r\n    }\r\n        \r\n    })\r\n    .catch(function(edata){\r\n        notify(2,edata.toString(),1);\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst getregistrationdata=()=>{\r\n    \r\n  dataservice(\"booking\",{ requestfor: 'getbooking' ,data:{}})\r\n  .then(function(data) {\r\n    if(data.resultkey==1){\r\n      var result=data.resultvalue;\r\n       setBookingdata({ ...bookingdata, [\"data\"]: result });\r\n    }else{\r\n    //  notify(2,\"No data found\");\r\n    }\r\n        \r\n    })\r\n    .catch(function(edata){\r\n        notify(2,edata.toString(),1);\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\n const openpopup=()=>{\r\n  resetvalues();\r\n // setCountryModalPopUp(!countrymodalpopup);\r\n }\r\n\r\n const resetvalues=()=>{\r\n  setState(prevState => ({\r\n    ...prevState,\r\n    description: \"\",\r\n    price:0,\r\n    id:\"\",\r\n    isactive:true,\r\n  }));\r\n }\r\n\r\n\r\n const getCitizenship = () => {\r\n  dataservice(\"citizenship\", { requestfor: 'getcitizenship', data: { flag: 'a' } })\r\n    .then(function (data) {\r\n      if (data.resultkey == 1) {\r\n        var result = data.resultvalue;\r\n        let countdata = [];\r\n        //let country = [\"Caloocan\", \"Malabon\", \"Makati\", \"Manila\", \"Mandaluyong\"]\r\n      \r\n        for (let index = 0; index < result.length; index++) {\r\n          //   \r\n          let item = result[index];\r\n          countdata.push({ value: item.id, label: item.description })\r\n          \r\n        }\r\n      \r\n        setCitizenship(countdata);\r\n      } else {\r\n        //  notify(2,\"No data found\");\r\n      }\r\n    })\r\n    .catch(function (edata) {\r\n      notify(2, edata.toString(), 1);\r\n    });\r\n\r\n}\r\n\r\nconst getCountry = () => {\r\n \r\n  dataservice(\"country\", { requestfor: 'getcountry', data: { flag: 'a' } })\r\n    .then(function (data) {\r\n      if (data.resultkey == 1) {\r\n        var result = data.resultvalue;\r\n        let countdata = [];\r\n        //let country = [\"Caloocan\", \"Malabon\", \"Makati\", \"Manila\", \"Mandaluyong\"]\r\n       // countdata.push({ value: \"-1\", label: \"Select Country\" })\r\n        for (let index = 0; index < result.length; index++) {\r\n          //   \r\n          let item = result[index];\r\n          countdata.push({ value: item.id, label: item.description })\r\n         \r\n        }\r\n        setCountry(countdata);\r\n      } else {\r\n        //  notify(2,\"No data found\");\r\n      }\r\n    })\r\n    .catch(function (edata) {\r\n      notify(2, edata.toString(), 1);\r\n    });\r\n\r\n}\r\n\r\nconst getProvince = () => {\r\n  dataservice(\"province\", { requestfor: 'getprovince', data: { flag: 'a' } })\r\n  .then(function (data) {\r\n    if (data.resultkey == 1) {\r\n      var result = data.resultvalue;\r\n     \r\n      setRawProvince(result);\r\n    \r\n      var Provincedata=getdropdownarr(result);\r\n      setProvince(Provincedata);\r\n      //setProvince(countdata);\r\n    } else {\r\n      //  notify(2,\"No data found\");\r\n    }\r\n  })\r\n  .catch(function (edata) {\r\n    notify(2, edata.toString(), 1);\r\n  });\r\n\r\n}\r\n\r\nconst getMunicipalities = () => {\r\n\r\ndataservice(\"municipality\", { requestfor: 'getmunicipality', data: { flag: 'a' } })\r\n  .then(function (data) {\r\n    if (data.resultkey == 1) {\r\n      var result = data.resultvalue;\r\n      var Municipalitydata=getdropdownarr(result);\r\n      setMunicipality(Municipalitydata);\r\n      let countdata = [];\r\n      //let country = [\"Caloocan\", \"Malabon\", \"Makati\", \"Manila\", \"Mandaluyong\"]\r\n      for (let index = 0; index < result.length; index++) {\r\n        //   \r\n        let item = result[index];\r\n        countdata.push({ value: item.id, label: item.description })\r\n        if (countdata.length === 1) {\r\n         // setSelectedMunicipality(item.id);\r\n        }\r\n      }\r\n     // setMunicipality(countdata);\r\n      setRawMunicipality(result);\r\n    } else {\r\n      //  notify(2,\"No data found\");\r\n    }\r\n  })\r\n  .catch(function (edata) {\r\n    notify(2, edata.toString(), 1);\r\n  });\r\n\r\n\r\n}\r\nconst getdropdownarr=(result)=>{\r\n  let countdata = [];\r\n  //let country = [\"Caloocan\", \"Malabon\", \"Makati\", \"Manila\", \"Mandaluyong\"]\r\n  for (let index = 0; index < result.length; index++) {\r\n    let item = result[index];\r\n    countdata.push({ value: item.id, label: item.description })\r\n  \r\n  }\r\n  return countdata;\r\n}\r\n//tourist\r\nconst handleChangeOptionGender= index => e =>{\r\n \r\n \r\n  state[\"touristinfo\"][index][\"gender\"]=e.value;\r\n  setState({...state, [\"touristinfo\"]: state[\"touristinfo\"] });\r\n  \r\n}\r\nconst onChangeTouristDate= index => e =>{\r\n   \r\n  var cusdate=e.getFullYear()+\"-\"+(e.getMonth() + 1)+\"-\"+e.getDate();\r\n  state[\"touristinfo\"][index][\"dob\"]=cusdate;\r\n  setState({...state, [\"touristinfo\"]: state[\"touristinfo\"] });\r\n}\r\nconst handleChangeOptionCountry= index => e =>{\r\n  \r\n \r\n  state[\"touristinfo\"][index][\"nationalityid\"]=e.value;\r\n  setState({...state, [\"touristinfo\"]: state[\"touristinfo\"] });\r\n  \r\n}\r\nconst handleChangeOptionProvince= index => e =>{\r\n   \r\n  \r\n   state[\"touristinfo\"][index][\"provinceid\"]=e.value;\r\n   setState({...state, [\"touristinfo\"]: state[\"touristinfo\"] });\r\n   \r\n }\r\n \r\nconst handleChangeOptionMunicipality= index => e =>{\r\n   \r\n  \r\n   state[\"touristinfo\"][index][\"municipalityid\"]=e.value;\r\n   setState({...state, [\"touristinfo\"]: state[\"touristinfo\"] });\r\n   \r\n }\r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n   <CRow>\r\n      <CCol xl={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol xl={6}>\r\n                Booking \r\n                <small className=\"text-muted\"> History</small>\r\n              </CCol>\r\n                <CCol xl={6} style={{textAlign:\"end\"}}>\r\n                {/* <CButton\r\n                    onClick={() => openpopup('n',{})}\r\n                    className=\"mr-1\"\r\n                    color=\"primary\"\r\n                \r\n                  >\r\n                    Add New\r\n                \r\n                  </CButton> */}\r\n            \r\n              </CCol>\r\n            </CRow>\r\n            \r\n           \r\n         \r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <CModal show={bookingeditmodalpopup} onClose={() => setBookingEditModalPopUp(!bookingeditmodalpopup)} size=\"xl\">\r\n              <CModalHeader closeButton>\r\n              <CModalTitle>Booking    <small className=\"text-muted\"> Detail</small> </CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCol md=\"12\">\r\n                  <CForm>\r\n                  <CRow>\r\n                      <CCol xs=\"3\" >\r\n                        <CLabel >From Date</CLabel>\r\n                        <CInputGroup className=\"mb-3\">\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText>\r\n                              <CIcon name=\"cil-calendar\" /> \r\n                            </CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <DatePicker readOnly={true} dateFormat=\"yyyy-MM-dd\" minDate={new Date()}   className=\"form-control\" selected={state.fromdate} onChange={date => onChangeFromDate(date)} />\r\n                          \r\n                        </CInputGroup>\r\n                      </CCol>\r\n                      <CCol xs=\"3\" >\r\n                        <CLabel >To Date</CLabel>\r\n                        <CInputGroup className=\"mb-3\">\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText>\r\n                              <CIcon name=\"cil-calendar\" />\r\n                            </CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <DatePicker  readOnly={true} dateFormat=\"yyyy-MM-dd\" minDate={state.fromdate} className=\"form-control\" selected={state.todate} onChange={date => onChangeToDate(date)} />\r\n                          \r\n\r\n                          {/* <CInput   type=\"text\" value={state.todate} id=\"vlastname\" placeholder=\"Enter Last Name\" /> */}\r\n                        </CInputGroup>\r\n                      </CCol>\r\n                      <CCol xs=\"3\">\r\n                        <CFormGroup row>\r\n                         \r\n                          <CCol md=\"9\" >\r\n                              <CLabel  htmlFor=\"isactive\">Charge</CLabel><br></br>\r\n                              <CLabel  htmlFor=\"isactive\">{state.totalcharge}</CLabel>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                      </CCol>\r\n                      <CCol xs=\"3\">\r\n                        <CFormGroup row>\r\n                         \r\n                          <CCol md=\"9\"  >\r\n                              <CLabel  htmlFor=\"isactive\">Qr Code</CLabel><br></br>\r\n                              <CImg\r\n                                src={url+state.qrcode}\r\n                                height=\"50\"\r\n                                alt=\"qrcode\"\r\n                              />\r\n                            \r\n                          </CCol>\r\n                        </CFormGroup>\r\n                      </CCol>\r\n                    </CRow>\r\n                    <CRow >\r\n                      <table className=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th style={{ width: \"10%\" }}>First Name</th>\r\n                            <th style={{ width: \"10%\" }}>Last Name</th>\r\n                          \r\n                            <th style={{ width: \"10%\" }}>DOB</th>\r\n                            <th style={{ width: \"15%\" }}>Gender</th>\r\n                            <th style={{ width: \"15%\" }}>Country</th>\r\n                            <th style={{ width: \"15%\" }}>Province</th>\r\n                            <th style={{ width: \"15%\" }}>Municipality</th>\r\n                           \r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {(() => {\r\n                              \r\n                              const rows = [];\r\n                              if (state.touristinfo.length > 0) {\r\n                                for (let i = 0; i < state.touristinfo.length; i++) {\r\n                                  var _touristinfo = state.touristinfo[i];\r\n                                  var _country= (country.filter(x=>x.value==_touristinfo.nationalityid)[0][\"value\"]);\r\n                                  var _province= RawProvince.filter(x=>x.id==_touristinfo.provinceid)[0][\"id\"];\r\n                                  var _municipality= RawMunicipality.filter(x=>x.id==_touristinfo.municipalityid)[0][\"id\"];\r\n                                  //_veh.checked = false;\r\n                                  rows.push(<> <tr>\r\n                            \r\n                                    <td>\r\n                                      \r\n                                    <CInput onChange={handleChange}  name={\"firstname\"} type=\"text\" value={state.touristinfo[i].firstname} id={state.touristinfo[i].uuid} placeholder=\"Enter First Name\" />\r\n                                      \r\n                                 \r\n                                    </td>\r\n                                    <td>\r\n                                    <CInput onChange={handleChange} name={\"lastname\"}   type=\"text\" value={state.touristinfo[i].lastname} id={state.touristinfo[i].uuid} placeholder=\"Enter Last Name\" />\r\n                                     \r\n                                   \r\n                                      </td>\r\n                                     \r\n                                      <td>\r\n                                      <DatePicker  dateFormat=\"yyyy-MM-dd\"  \r\n                                       className=\"form-control\" selected={new Date(_touristinfo.dob)} onChange={ onChangeTouristDate(i)} />\r\n                       \r\n                                      {/* {} */}\r\n                                      </td>\r\n                                      <td>\r\n                                      <Select\r\n                                className=\"dropdown\"\r\n                                placeholder=\"Select\"\r\n                                value={Gender.find(obj => obj.value === parseFloat(_touristinfo.gender) )} // set selected values\r\n                                options={Gender}\r\n                                onChange={handleChangeOptionGender(i)}  // set list of the data\r\n                                 />\r\n                               \r\n                                      </td>\r\n                                      <td>\r\n                                      <Select\r\n                                          id=\"CountryofOrigin\"\r\n                                          className=\"dropdown\"\r\n                                          placeholder=\"Select\"\r\n                                          value={country.find(obj => obj.value ===_country)} // set selected values\r\n                                          options={country} // set list of the data\r\n                                          onChange={handleChangeOptionCountry(i)}\r\n                                         // assign onChange function\r\n                                          />\r\n                                   \r\n                                      </td>\r\n                                      <td>\r\n                                      <Select\r\n                                          id=\"Province\"\r\n                                          className=\"dropdown\"\r\n                                          placeholder=\"Select\"\r\n                                          value={Province.find(obj => obj.value === _province.toString())} // set selected values\r\n                                          options={Province}  // set list of the data\r\n                                          onChange={handleChangeOptionProvince(i)}\r\n                                         // assign onChange function\r\n                                          />\r\n                                    \r\n                                      </td>\r\n                                      <td>\r\n                                      <Select\r\n                                          id=\"Municipality\"\r\n                                          className=\"dropdown\"\r\n                                          placeholder=\"Select\"\r\n                                          value={Municipality.find(obj => obj.value === _municipality.toString())} // set selected values\r\n                                          options={Municipality}  // set list of the data\r\n                                          onChange={handleChangeOptionMunicipality(i)}\r\n                                         // assign onChange function\r\n                                          />\r\n                                      {/* {RawMunicipality.filter(x=>x.id==_touristinfo.municipalityid)[0][\"description\"]} */}\r\n                                      </td>\r\n                                \r\n      \r\n      \r\n                                  </tr></>);\r\n                                  \r\n                                }\r\n                                return rows;\r\n                              }\r\n\r\n                      })()}\r\n                      \r\n                        </tbody>\r\n                      </table>\r\n                      {/* \r\n                     */}\r\n                    </CRow>\r\n                   \r\n                  </CForm>\r\n\r\n                </CCol>\r\n\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" disabled={disabledbtn}  onClick={() => savedata()}>Save</CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() => setBookingEditModalPopUp(!bookingeditmodalpopup)}>Cancel</CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n          <CModal show={bookingviewmodalpopup} onClose={() => setBookingViewModalPopUp(!bookingviewmodalpopup)} size=\"xl\">\r\n              <CModalHeader closeButton>\r\n              <CModalTitle>Booking    <small className=\"text-muted\"> Detail</small> </CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCol md=\"12\">\r\n                  <CForm>\r\n                    <CRow>\r\n                    <CCol xs=\"3\" >\r\n                        <CLabel >From Date</CLabel>\r\n                        <CInputGroup className=\"mb-3\">\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText>\r\n                              <CIcon name=\"cil-calendar\" /> \r\n                            </CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <DatePicker readOnly={true} dateFormat=\"yyyy-MM-dd\" minDate={new Date()}   className=\"form-control\" selected={state.fromdate} onChange={date => onChangeFromDate(date)} />\r\n                          \r\n                        </CInputGroup>\r\n                      </CCol>\r\n                      <CCol xs=\"3\" >\r\n                        <CLabel >To Date</CLabel>\r\n                        <CInputGroup className=\"mb-3\">\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText>\r\n                              <CIcon name=\"cil-calendar\" />\r\n                            </CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <DatePicker  readOnly={true} dateFormat=\"yyyy-MM-dd\" minDate={state.fromdate} className=\"form-control\" selected={state.todate} onChange={date => onChangeToDate(date)} />\r\n                          \r\n\r\n                          {/* <CInput   type=\"text\" value={state.todate} id=\"vlastname\" placeholder=\"Enter Last Name\" /> */}\r\n                        </CInputGroup>\r\n                      </CCol>\r\n                     <CCol xs=\"3\">\r\n                        <CFormGroup row>\r\n                         \r\n                          <CCol md=\"9\" >\r\n                              <CLabel  htmlFor=\"isactive\">Charge</CLabel><br></br>\r\n                              <CLabel  htmlFor=\"isactive\">{state.totalcharge}</CLabel>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                      </CCol>\r\n                      <CCol xs=\"3\">\r\n                        <CFormGroup row>\r\n                         \r\n                          <CCol md=\"9\"  >\r\n                              <CLabel  htmlFor=\"isactive\">Qr Code</CLabel><br></br>\r\n                              <CImg\r\n                                src={url+state.qrcode}\r\n                                height=\"50\"\r\n                                alt=\"qrcode\"\r\n                              />\r\n                            \r\n                          </CCol>\r\n                        </CFormGroup>\r\n                      </CCol>\r\n                    </CRow>\r\n                    <CRow >\r\n                      <table className=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th style={{ width: \"10%\" }}>First Name</th>\r\n                            <th style={{ width: \"10%\" }}>Last Name</th>\r\n                            <th>Gender</th>\r\n                            <th>DOB</th>\r\n                            <th>Country</th>\r\n                            <th>Province</th>\r\n                            <th>Municipality</th>\r\n                           \r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {(() => {\r\n                              \r\n                              const rows = [];\r\n                              if (state.touristinfo.length > 0) {\r\n                                for (let i = 0; i < state.touristinfo.length; i++) {\r\n                                  var _touristinfo = state.touristinfo[i];\r\n                                  //_veh.checked = false;\r\n                                  rows.push(<> <tr>\r\n                            \r\n                                    <td>\r\n                                    {_touristinfo.firstname}\r\n                                    </td>\r\n                                    <td>\r\n                                    {_touristinfo.lastname}\r\n                                      </td>\r\n                                      <td>\r\n                                      {_touristinfo.gender==\"0\"?\"Male\":(_touristinfo.gender==\"1\"?\"Female\":\"Other\")}\r\n                                      </td>\r\n                                      <td>\r\n                                      {_touristinfo.dob}\r\n                                      </td>\r\n                                      <td>\r\n                                        \r\n                                      {country.filter(x=>x.value==_touristinfo.nationalityid)[0][\"label\"]}\r\n                                      </td>\r\n                                      <td>\r\n                                      {RawProvince.filter(x=>x.id==_touristinfo.provinceid)[0][\"description\"]}\r\n                                      </td>\r\n                                      <td>\r\n                                      {RawMunicipality.filter(x=>x.id==_touristinfo.municipalityid)[0][\"description\"]}\r\n                                      </td>\r\n                                \r\n      \r\n      \r\n                                  </tr></>);\r\n                                  \r\n                                }\r\n                                return rows;\r\n                              }\r\n\r\n                      })()}\r\n                      \r\n                        </tbody>\r\n                      </table>\r\n                      {/* \r\n                     */}\r\n                    </CRow>\r\n                   \r\n                  </CForm>\r\n\r\n                </CCol>\r\n\r\n              </CModalBody>\r\n              {/* <CModalFooter>\r\n                <CButton color=\"primary\" disabled={disabledbtn}  onClick={() => savedata()}>Save</CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() => setCountryModalPopUp(!countrymodalpopup)}>Cancel</CButton>\r\n              </CModalFooter> */}\r\n            </CModal>\r\n\r\n          <DataTableExtensions\r\n      {...bookingdata}\r\n    >\r\n        \r\n\r\n      <DataTable\r\n        noHeader\r\n        defaultSortField=\"id\"\r\n        defaultSortAsc={false}\r\n        pagination\r\n        highlightOnHover\r\n       \r\n      />\r\n    </DataTableExtensions>\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n      </>\r\n    \r\n  )\r\n}\r\n\r\nexport default BookingHistory\r\n","import common from '../common/common';\r\nconst dataservice = async (controller, reqbody) => {\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(reqbody)\r\n  };\r\n  //common.baseurl +;\r\n  // https://maubantourism.smartpay.ph/\r\n  // https://tourism-test.smartpay.ph/\r\n  const url = \"https://maubantourism.smartpay.ph/tourbookingphp/\" + controller + \".php\"\r\n  return await fetch(url, requestOptions)\r\n    .then(async response => {\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      } else {\r\n        return data;\r\n      }\r\n\r\n    })\r\n    .catch(error => {\r\n      return Promise.reject(error);\r\n    });\r\n\r\n}\r\n\r\nexport default dataservice","import React from \"react\";\r\n\r\nexport class InputDecimal extends React.Component {\r\n  constructor(prop) {\r\n    super(prop);\r\n    this.state = { input: \"\",readonly:false };\r\n    this.start = 0;\r\n  }\r\n\r\n  change = e => {\r\n   \r\n    this.start = e.target.selectionStart;\r\n    let val = e.target.value;\r\n    val = val.replace(/([^0-9.]+)/, \"\");\r\n    val = val.replace(/^(0|\\.)/, \"\");\r\n    const match = /(\\d{0,7})[^.]*((?:\\.\\d{0,2})?)/g.exec(val);\r\n    const value = match[1] + match[2];\r\n    e.target.value = value;\r\n    this.setState({ input: value });\r\n    if (val.length > 0) {\r\n      e.target.value = Number(value).toFixed(2);\r\n      e.target.setSelectionRange(this.start, this.start);\r\n      this.setState({ input: Number(value).toFixed(2) });\r\n    }\r\n  };\r\n\r\n  // blur = e => {\r\n  //   const val = e.target.value;\r\n  //   if (val.length > 0) {\r\n  //     e.target.value = Number(val).toFixed(2);\r\n  //     this.setState({ input: e.target.value });\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"text\"\r\n          onBlur={this.blur}\r\n          onChange={this.change}\r\n          value={this.state.input}\r\n          className=\"form-control\"\r\n          readOnly={this.state.readonly}\r\n        //   style={{ fontSize: \"22px\", padding: \"4px\" }}\r\n          {...this.props}\r\n        />\r\n        {/* <pre style={{ color: \"#999\", height: \"30px\" }}>{this.state.input}</pre> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","var readJson = require('read-package-json')\r\nvar data = require('../../../package.json')\r\nvar _host = \"\";\r\n_host = \"https://maubantourism.smartpay.ph\";\r\nlet commondata;\r\nif (data.mode == \"dev\") {\r\n  commondata = {\r\n    fileuploadurl: \"/tourbookingphp/upload.php\",\r\n    guesttemplate: _host + \"/tourbookingphp/guesttemplate.xlsx\",\r\n    //  filepath:_host+\"/tourbooking/uploads/\",\r\n    baseurl: _host + \"/tourbookingphp/\",\r\n  }\r\n} else {\r\n\r\n  commondata = {\r\n    fileuploadurl: \"/tourbookingphp/upload.php\",\r\n    guesttemplate: \"/tourbookingphp/guesttemplate.xlsx\",\r\n    //  filepath:_host+\"/tourbooking/uploads/\",\r\n    baseurl: \"/tourbookingphp/\",\r\n  }\r\n}\r\n\r\n// _host=window.location.host;\r\n//  const commondata = {\r\n//      fileuploadurl:_host+\"/tourbookingphp/upload.php\",\r\n//     //  filepath:_host+\"/tourbooking/uploads/\",\r\n//      baseurl: _host+\"/tourbookingphp/\", \r\n//  }\r\n//live\r\n// const commondata = {\r\n//     fileuploadurl:\"/tourbookingphp/upload.php\",\r\n//    //  filepath:_host+\"/tourbooking/uploads/\",\r\n//     baseurl: \"/tourbookingphp/\", \r\n// }\r\n//staging\r\n// const commondata = {\r\n//     fileuploadurl:\"/tourbookingphp/upload.php\",\r\n//    //  filepath:_host+\"/tourbooking/uploads/\",\r\n//     baseurl: _host+\"/tourbookingphp/\", \r\n// }\r\n\r\n\r\n//  const commondata = {\r\n//          fileuploadurl:\"/investorportalphp/upload.php\",\r\n//          filepath:\"/investorportalphp/uploads/\",\r\n//          baseurl: \"/investorportalphp/api.php\", \r\n//      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default commondata\r\n"],"sourceRoot":""}