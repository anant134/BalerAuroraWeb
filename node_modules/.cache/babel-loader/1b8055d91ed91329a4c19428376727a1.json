{"ast":null,"code":"var _defineProperty = require(\"D:/I2T/Smarttech/tourbookingwebgit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\n// pass in a manifest with a 'bin' field here, and it'll turn it\n// into a properly santized bin object\nvar _require = require('path'),\n    join = _require.join,\n    basename = _require.basename;\n\nvar normalize = function normalize(pkg) {\n  return !pkg.bin ? removeBin(pkg) : typeof pkg.bin === 'string' ? normalizeString(pkg) : Array.isArray(pkg.bin) ? normalizeArray(pkg) : typeof pkg.bin === 'object' ? normalizeObject(pkg) : removeBin(pkg);\n};\n\nvar normalizeString = function normalizeString(pkg) {\n  if (!pkg.name) return removeBin(pkg);\n  pkg.bin = _defineProperty({}, pkg.name, pkg.bin);\n  return normalizeObject(pkg);\n};\n\nvar normalizeArray = function normalizeArray(pkg) {\n  pkg.bin = pkg.bin.reduce(function (acc, k) {\n    acc[basename(k)] = k;\n    return acc;\n  }, {});\n  return normalizeObject(pkg);\n};\n\nvar removeBin = function removeBin(pkg) {\n  delete pkg.bin;\n  return pkg;\n};\n\nvar normalizeObject = function normalizeObject(pkg) {\n  var orig = pkg.bin;\n  var clean = {};\n  var hasBins = false;\n  Object.keys(orig).forEach(function (binKey) {\n    var base = join('/', basename(binKey.replace(/\\\\|:/g, '/'))).substr(1);\n    if (typeof orig[binKey] !== 'string' || !base) return;\n    var binTarget = join('/', orig[binKey]).replace(/\\\\/g, '/').substr(1);\n    if (!binTarget) return;\n    clean[base] = binTarget;\n    hasBins = true;\n  });\n  if (hasBins) pkg.bin = clean;else delete pkg.bin;\n  return pkg;\n};\n\nmodule.exports = normalize;","map":{"version":3,"sources":["D:/I2T/Smarttech/tourbookingwebgit/node_modules/npm-normalize-package-bin/index.js"],"names":["require","join","basename","normalize","pkg","bin","removeBin","normalizeString","Array","isArray","normalizeArray","normalizeObject","name","reduce","acc","k","orig","clean","hasBins","Object","keys","forEach","binKey","base","replace","substr","binTarget","module","exports"],"mappings":";;AAAA;AACA;AACA,eAAyBA,OAAO,CAAC,MAAD,CAAhC;AAAA,IAAOC,IAAP,YAAOA,IAAP;AAAA,IAAaC,QAAb,YAAaA,QAAb;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG;AAAA,SACnB,CAACA,GAAG,CAACC,GAAL,GAAWC,SAAS,CAACF,GAAD,CAApB,GACE,OAAOA,GAAG,CAACC,GAAX,KAAmB,QAAnB,GAA8BE,eAAe,CAACH,GAAD,CAA7C,GACAI,KAAK,CAACC,OAAN,CAAcL,GAAG,CAACC,GAAlB,IAAyBK,cAAc,CAACN,GAAD,CAAvC,GACA,OAAOA,GAAG,CAACC,GAAX,KAAmB,QAAnB,GAA8BM,eAAe,CAACP,GAAD,CAA7C,GACAE,SAAS,CAACF,GAAD,CALQ;AAAA,CAArB;;AAOA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,GAAG,EAAI;AAC7B,MAAI,CAACA,GAAG,CAACQ,IAAT,EACE,OAAON,SAAS,CAACF,GAAD,CAAhB;AACFA,EAAAA,GAAG,CAACC,GAAJ,uBAAaD,GAAG,CAACQ,IAAjB,EAAwBR,GAAG,CAACC,GAA5B;AACA,SAAOM,eAAe,CAACP,GAAD,CAAtB;AACD,CALD;;AAOA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAAN,GAAG,EAAI;AAC5BA,EAAAA,GAAG,CAACC,GAAJ,GAAUD,GAAG,CAACC,GAAJ,CAAQQ,MAAR,CAAe,UAACC,GAAD,EAAMC,CAAN,EAAY;AACnCD,IAAAA,GAAG,CAACZ,QAAQ,CAACa,CAAD,CAAT,CAAH,GAAmBA,CAAnB;AACA,WAAOD,GAAP;AACD,GAHS,EAGP,EAHO,CAAV;AAIA,SAAOH,eAAe,CAACP,GAAD,CAAtB;AACD,CAND;;AAQA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAF,GAAG,EAAI;AACvB,SAAOA,GAAG,CAACC,GAAX;AACA,SAAOD,GAAP;AACD,CAHD;;AAKA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAAP,GAAG,EAAI;AAC7B,MAAMY,IAAI,GAAGZ,GAAG,CAACC,GAAjB;AACA,MAAMY,KAAK,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,KAAd;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA0B,UAAAC,MAAM,EAAI;AAClC,QAAMC,IAAI,GAAGtB,IAAI,CAAC,GAAD,EAAMC,QAAQ,CAACoB,MAAM,CAACE,OAAP,CAAe,OAAf,EAAwB,GAAxB,CAAD,CAAd,CAAJ,CAAkDC,MAAlD,CAAyD,CAAzD,CAAb;AAEA,QAAI,OAAOT,IAAI,CAACM,MAAD,CAAX,KAAwB,QAAxB,IAAoC,CAACC,IAAzC,EACE;AAEF,QAAMG,SAAS,GAAGzB,IAAI,CAAC,GAAD,EAAMe,IAAI,CAACM,MAAD,CAAV,CAAJ,CACfE,OADe,CACP,KADO,EACA,GADA,EACKC,MADL,CACY,CADZ,CAAlB;AAGA,QAAI,CAACC,SAAL,EACE;AAEFT,IAAAA,KAAK,CAACM,IAAD,CAAL,GAAcG,SAAd;AACAR,IAAAA,OAAO,GAAG,IAAV;AACD,GAdD;AAgBA,MAAIA,OAAJ,EACEd,GAAG,CAACC,GAAJ,GAAUY,KAAV,CADF,KAGE,OAAOb,GAAG,CAACC,GAAX;AAEF,SAAOD,GAAP;AACD,CA1BD;;AA4BAuB,MAAM,CAACC,OAAP,GAAiBzB,SAAjB","sourcesContent":["// pass in a manifest with a 'bin' field here, and it'll turn it\n// into a properly santized bin object\nconst {join, basename} = require('path')\n\nconst normalize = pkg =>\n  !pkg.bin ? removeBin(pkg)\n  : typeof pkg.bin === 'string' ? normalizeString(pkg)\n  : Array.isArray(pkg.bin) ? normalizeArray(pkg)\n  : typeof pkg.bin === 'object' ? normalizeObject(pkg)\n  : removeBin(pkg)\n\nconst normalizeString = pkg => {\n  if (!pkg.name)\n    return removeBin(pkg)\n  pkg.bin = { [pkg.name]: pkg.bin }\n  return normalizeObject(pkg)\n}\n\nconst normalizeArray = pkg => {\n  pkg.bin = pkg.bin.reduce((acc, k) => {\n    acc[basename(k)] = k\n    return acc\n  }, {})\n  return normalizeObject(pkg)\n}\n\nconst removeBin = pkg => {\n  delete pkg.bin\n  return pkg\n}\n\nconst normalizeObject = pkg => {\n  const orig = pkg.bin\n  const clean = {}\n  let hasBins = false\n  Object.keys(orig).forEach(binKey => {\n    const base = join('/', basename(binKey.replace(/\\\\|:/g, '/'))).substr(1)\n\n    if (typeof orig[binKey] !== 'string' || !base)\n      return\n\n    const binTarget = join('/', orig[binKey])\n      .replace(/\\\\/g, '/').substr(1)\n\n    if (!binTarget)\n      return\n\n    clean[base] = binTarget\n    hasBins = true\n  })\n\n  if (hasBins)\n    pkg.bin = clean\n  else\n    delete pkg.bin\n\n  return pkg\n}\n\nmodule.exports = normalize\n"]},"metadata":{},"sourceType":"script"}