{"ast":null,"code":"import _objectSpread from \"D:/I2T/Smarttech/tourbookingwebgit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:/I2T/Smarttech/tourbookingwebgit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"backgroundColor\", \"pointHoverBackgroundColor\", \"dataPoints\", \"CustomdataSet\", \"label\", \"pointed\"];\n\nvar _jsxFileName = \"D:\\\\I2T\\\\Smarttech\\\\tourbookingwebgit\\\\src\\\\views\\\\charts\\\\ChartBarBracelet.js\",\n    _this = this;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getColor } from '@coreui/utils';\nimport { CChartBar } from '@coreui/react-chartjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ChartBarBracelet = function ChartBarBracelet(props) {\n  var backgroundColor = props.backgroundColor,\n      pointHoverBackgroundColor = props.pointHoverBackgroundColor,\n      dataPoints = props.dataPoints,\n      CustomdataSet = props.CustomdataSet,\n      label = props.label,\n      pointed = props.pointed,\n      attributes = _objectWithoutProperties(props, _excluded);\n\n  var defaultDatasets = function () {\n    return dataPoints; //  [\n    //     {\n    //         data: dataPoints,\n    //         backgroundColor: getColor(backgroundColor),\n    //         pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\n    //         label: label,\n    //         barPercentage: 0.5,\n    //         categoryPercentage: 1\n    //     }\n    // ]\n  }();\n\n  var defaultOptions = function () {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      }\n    };\n  }(); // render\n\n\n  return /*#__PURE__*/_jsxDEV(CChartBar, _objectSpread(_objectSpread({}, attributes), {}, {\n    datasets: defaultDatasets,\n    options: defaultOptions,\n    labels: label\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = ChartBarBracelet;\nChartBarSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\nChartBarSimple.defaultProps = {\n  backgroundColor: 'rgba(0,0,0,.2)',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\nexport default ChartBarBracelet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBarBracelet\");","map":{"version":3,"sources":["D:/I2T/Smarttech/tourbookingwebgit/src/views/charts/ChartBarBracelet.js"],"names":["React","PropTypes","getColor","CChartBar","ChartBarBracelet","props","backgroundColor","pointHoverBackgroundColor","dataPoints","CustomdataSet","label","pointed","attributes","defaultDatasets","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","yAxes","ChartBarSimple","propTypes","tag","oneOfType","func","string","className","array","bool","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAE9B,MACIC,eADJ,GAQID,KARJ,CACIC,eADJ;AAAA,MAEIC,yBAFJ,GAQIF,KARJ,CAEIE,yBAFJ;AAAA,MAGIC,UAHJ,GAQIH,KARJ,CAGIG,UAHJ;AAAA,MAIIC,aAJJ,GAQIJ,KARJ,CAIII,aAJJ;AAAA,MAKIC,KALJ,GAQIL,KARJ,CAKIK,KALJ;AAAA,MAMIC,OANJ,GAQIN,KARJ,CAMIM,OANJ;AAAA,MAOOC,UAPP,4BAQIP,KARJ;;AAUA,MAAMQ,eAAe,GAAI,YAAM;AAC3B,WAAOL,UAAP,CAD2B,CAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAZuB,EAAxB;;AAcA,MAAMM,cAAc,GAAI,YAAM;AAC1B,WAAO;AACHC,MAAAA,mBAAmB,EAAE,KADlB;AAEHC,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL,OAFL;AAKHC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJF,UAAAA,OAAO,EAAE;AADL,SAAD,CADH;AAIJG,QAAAA,KAAK,EAAE,CAAC;AACJH,UAAAA,OAAO,EAAE;AADL,SAAD;AAJH;AALL,KAAP;AAcH,GAfsB,EAAvB,CA1B8B,CA2C9B;;;AACA,sBACI,QAAC,SAAD,kCACQL,UADR;AAEI,IAAA,QAAQ,EAAEC,eAFd;AAGI,IAAA,OAAO,EAAEC,cAHb;AAII,IAAA,MAAM,EAAEJ;AAJZ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CApDD;;KAAMN,gB;AAsDNiB,cAAc,CAACC,SAAf,GAA2B;AACvBC,EAAAA,GAAG,EAAEtB,SAAS,CAACuB,SAAV,CAAoB,CAACvB,SAAS,CAACwB,IAAX,EAAiBxB,SAAS,CAACyB,MAA3B,CAApB,CADkB;AAEvBC,EAAAA,SAAS,EAAE1B,SAAS,CAACyB,MAFE;AAGvB;AACApB,EAAAA,eAAe,EAAEL,SAAS,CAACyB,MAJJ;AAKvBnB,EAAAA,yBAAyB,EAAEN,SAAS,CAACyB,MALd;AAMvBlB,EAAAA,UAAU,EAAEP,SAAS,CAAC2B,KANC;AAOvBlB,EAAAA,KAAK,EAAET,SAAS,CAACyB,MAPM;AAQvBf,EAAAA,OAAO,EAAEV,SAAS,CAAC4B;AARI,CAA3B;AAWAR,cAAc,CAACS,YAAf,GAA8B;AAC1BxB,EAAAA,eAAe,EAAE,gBADS;AAE1BE,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAFc;AAG1BE,EAAAA,KAAK,EAAE;AAHmB,CAA9B;AAMA,eAAeN,gBAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarBracelet = props => {\r\n\r\n    const {\r\n        backgroundColor,\r\n        pointHoverBackgroundColor,\r\n        dataPoints,\r\n        CustomdataSet,\r\n        label,\r\n        pointed,\r\n        ...attributes\r\n    } = props\r\n\r\n    const defaultDatasets = (() => {\r\n        return dataPoints;\r\n        //  [\r\n        //     {\r\n        //         data: dataPoints,\r\n        //         backgroundColor: getColor(backgroundColor),\r\n        //         pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        //         label: label,\r\n        //         barPercentage: 0.5,\r\n        //         categoryPercentage: 1\r\n        //     }\r\n        // ]\r\n    })()\r\n\r\n    const defaultOptions = (() => {\r\n        return {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: false\r\n                }],\r\n                yAxes: [{\r\n                    display: false\r\n                }]\r\n            }\r\n        }\r\n    })()\r\n\r\n    // render\r\n    return (\r\n        <CChartBar\r\n            {...attributes}\r\n            datasets={defaultDatasets}\r\n            options={defaultOptions}\r\n            labels={label}\r\n        />\r\n    )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    className: PropTypes.string,\r\n    //\r\n    backgroundColor: PropTypes.string,\r\n    pointHoverBackgroundColor: PropTypes.string,\r\n    dataPoints: PropTypes.array,\r\n    label: PropTypes.string,\r\n    pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n    backgroundColor: 'rgba(0,0,0,.2)',\r\n    dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n    label: 'Sales'\r\n};\r\n\r\nexport default ChartBarBracelet\r\n"]},"metadata":{},"sourceType":"module"}