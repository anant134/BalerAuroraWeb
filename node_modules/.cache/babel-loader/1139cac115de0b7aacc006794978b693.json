{"ast":null,"code":"import _slicedToArray from \"D:/I2T/Smarttech/tourbookingwebgit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\I2T\\\\Smarttech\\\\tourbookingwebgit\\\\src\\\\views\\\\widgets\\\\WidgetsDropdown.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { CWidgetDropdown, CRow, CCol, CDropdown, CDropdownMenu, CDropdownItem, CDropdownToggle } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport ChartLineSimple from '../charts/ChartLineSimple';\nimport ChartBarSimple from '../charts/ChartBarSimple';\nimport dataservice from \"../service/dataservice\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar WidgetsDropdown = function WidgetsDropdown() {\n  _s();\n\n  // render\n  var _useState = useState(2),\n      _useState2 = _slicedToArray(_useState, 2),\n      GAmonth = _useState2[0],\n      setGAmonth = _useState2[1];\n\n  var _useState3 = useState(\"Feb\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      GAmonthstr = _useState4[0],\n      setGAmonthstr = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Cmonth = _useState6[0],\n      setCmonth = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      GARawData = _useState8[0],\n      setGARawData = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      GAData = _useState10[0],\n      setGAData = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      GALabel = _useState12[0],\n      setGALabel = _useState12[1];\n\n  var _useState13 = useState([{\n    label: \"Jan\",\n    value: 1\n  }, {\n    label: \"Feb\",\n    value: 2\n  }, {\n    label: \"Mar\",\n    value: 3\n  }, {\n    label: \"Apr\",\n    value: 4\n  }, {\n    label: \"May\",\n    value: 5\n  }, {\n    label: \"Jun\",\n    value: 6\n  }, {\n    label: \"Jul\",\n    value: 7\n  }, {\n    label: \"Aug\",\n    value: 8\n  }, {\n    label: \"Sep\",\n    value: 9\n  }, {\n    label: \"Oct\",\n    value: 10\n  }, {\n    label: \"Nov\",\n    value: 11\n  }, {\n    label: \"Dec\",\n    value: 12\n  }]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      Months = _useState14[0],\n      setMonths = _useState14[1];\n\n  var countdata = [];\n\n  for (var index = 1; index <= parseInt(100); index++) {\n    countdata.push({\n      value: index,\n      label: index.toString()\n    });\n  }\n\n  setNumberOfGuestData(countdata);\n\n  var getGuestArrived = function getGuestArrived(isFetchCurrentMonth, Month) {\n    dataservice(\"dashboardstats\", {\n      requestfor: 'getGuestArrived',\n      data: {\n        isCurrentMonth: isFetchCurrentMonth,\n        month: Month\n      }\n    }).then(function (data) {\n      debugger;\n\n      if (data.resultkey == 1) {\n        var _GARawdata = [];\n        var _GAData = [];\n        var _GAlabels = [];\n\n        if (data.resultvalue.length > 0) {\n          for (var _index = 0; _index < data.resultvalue.length; _index++) {\n            var element = data.resultvalue[_index];\n\n            _GARawdata.push({\n              cnt: parseFloat(element.count),\n              mnt: element.mnt,\n              dt: element.dt\n            });\n\n            if (parseFloat(element.mnt) == GAmonth) {\n              _GAData.push(parseFloat(element.count));\n\n              _GAlabels.push(element.dt);\n            }\n          }\n        }\n\n        setGARawData(_GARawdata);\n        setGAData(_GAData);\n        setGALabel(_GAlabels);\n      }\n    });\n  };\n\n  var getCollection = function getCollection() {\n    dataservice(\"dashboardstats\", {\n      requestfor: 'getCollection',\n      data: {\n        month: Cmonth\n      }\n    }).then(function (data) {});\n  };\n\n  var handleChangeOptionNOG = function handleChangeOptionNOG(e) {\n    // if (bulkuploaddata.length > 0) {\n    //   setSelectedNumberGuestBeforConfirm(e.value);\n    //   setIsConfirmChange(!isconfirmchange);\n    // } else {\n    //   setSelectedNumberGuest(e.value);\n    // }\n    var monthstr = \"\";\n\n    switch (id) {\n      case 1:\n        monthstr = \"Jan\";\n        break;\n\n      case 2:\n        monthstr = \"Feb\";\n        break;\n\n      case 3:\n        monthstr = \"Mar\";\n        break;\n\n      case 4:\n        monthstr = \"Apr\";\n        break;\n\n      case 5:\n        monthstr = \"May\";\n        break;\n\n      case 6:\n        monthstr = \"Jun\";\n        break;\n\n      case 7:\n        monthstr = \"Jul\";\n        break;\n\n      case 8:\n        monthstr = \"Aug\";\n        break;\n\n      case 9:\n        monthstr = \"Sep\";\n        break;\n\n      case 10:\n        monthstr = \"Oct\";\n        break;\n\n      case 11:\n        monthstr = \"Nov\";\n        break;\n\n      case 12:\n        monthstr = \"Dec\";\n        break;\n\n      default:\n        break;\n    }\n\n    setGAmonth(id);\n    setGAmonthstr(monthstr);\n  };\n\n  var handleChangeOptionGA = function handleChangeOptionGA(id, opt) {\n    switch (opt) {\n      case \"GA\":\n        setGAmonth(id);\n        setGAmonthstr(monthstr);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(function () {\n    getGuestArrived(true, 1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CRow, {\n    children: [/*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"6\",\n      lg: \"3\",\n      children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n        color: \"gradient-primary\",\n        header: \"\",\n        text: \"Guest Arrived\",\n        footerSlot: /*#__PURE__*/_jsxDEV(ChartLineSimple, {\n          pointed: true,\n          className: \"c-chart-wrapper mt-3 mx-3\",\n          style: {\n            height: '70px'\n          },\n          dataPoints: GAData,\n          pointHoverBackgroundColor: \"primary\",\n          label: GAmonthstr,\n          labels: GALabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(CDropdown, {\n          children: [/*#__PURE__*/_jsxDEV(CDropdownToggle, {\n            color: \"transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CDropdownMenu, {\n            className: \"pt-0\",\n            placement: \"bottom-end\",\n            children: function () {\n              var rows = [];\n\n              if (Months.length > 0) {\n                for (var i = 0; i < Months.length; i++) {\n                  var _mnt = Months[i]; //_veh.checked = false;\n\n                  rows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      className: \"dropdown\",\n                      placeholder: \"Select\",\n                      value: Months.find(function (obj) {\n                        return obj.value === selectedGAMonths;\n                      }) // set selected values\n                      ,\n                      options: Months // set list of the data\n                      ,\n                      onChange: handleChangeOptionGA // assign onChange function\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false));\n                }\n\n                return rows;\n              }\n            }()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"6\",\n      lg: \"3\",\n      children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n        color: \"gradient-info\",\n        header: \"\",\n        text: \"Collection\",\n        footerSlot: /*#__PURE__*/_jsxDEV(ChartLineSimple, {\n          pointed: true,\n          className: \"mt-3 mx-3\",\n          style: {\n            height: '70px'\n          },\n          dataPoints: [1, 18, 9, 17, 34, 22, 11],\n          pointHoverBackgroundColor: \"info\",\n          options: {\n            elements: {\n              line: {\n                tension: 0.00001\n              }\n            }\n          },\n          label: \"Members\",\n          labels: \"months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(CDropdown, {\n          children: [/*#__PURE__*/_jsxDEV(CDropdownToggle, {\n            color: \"transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CDropdownMenu, {\n            className: \"pt-0\",\n            placement: \"bottom-end\",\n            children: function () {\n              var rows = [];\n\n              if (Months.length > 0) {\n                for (var i = 0; i < Months.length; i++) {\n                  var _mnt = Months[i]; //_veh.checked = false;\n\n                  rows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(CDropdownItem, {\n                      onClick: function onClick() {\n                        return _this.handleClick(_mnt.id, \"C\");\n                      },\n                      children: _mnt.name\n                    }, _mnt.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false));\n                }\n\n                return rows;\n              }\n            }()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"6\",\n      lg: \"3\",\n      children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n        color: \"gradient-danger\",\n        header: \"\",\n        text: \"Bracelet Stats\",\n        footerSlot: /*#__PURE__*/_jsxDEV(ChartBarSimple, {\n          className: \"mt-3 mx-3\",\n          style: {\n            height: '70px'\n          },\n          backgroundColor: \"rgb(250, 152, 152)\",\n          label: \"Members\",\n          dataPoints: [{\n            label: 'Buy',\n            backgroundColor: 'rgb(250, 152, 152)',\n            data: [39, 80, 40, 35, 40, 20, 45]\n          }, {\n            label: 'Rent',\n            backgroundColor: 'rgb(0,216,255,0.9)',\n            data: [39, 80, 40, 35, 40, 20, 45]\n          }],\n          labels: \"months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(CDropdown, {\n          children: [/*#__PURE__*/_jsxDEV(CDropdownToggle, {\n            color: \"transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CDropdownMenu, {\n            className: \"pt-0\",\n            placement: \"bottom-end\",\n            children: [/*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Jan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Feb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Mar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Apr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"May\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Jun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Jul\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Aug\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Sep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Oct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Nov\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Dec\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"6\",\n      lg: \"3\",\n      children: /*#__PURE__*/_jsxDEV(CWidgetDropdown, {\n        color: \"gradient-warning\",\n        header: \"\",\n        text: \"Sr.Citizen Stats\",\n        footerSlot: /*#__PURE__*/_jsxDEV(ChartLineSimple, {\n          className: \"mt-3\",\n          style: {\n            height: '70px'\n          },\n          backgroundColor: \"rgba(255,255,255,.2)\",\n          dataPoints: [78, 81, 80, 45, 34, 12, 40],\n          options: {\n            elements: {\n              line: {\n                borderWidth: 2.5\n              }\n            }\n          },\n          pointHoverBackgroundColor: \"warning\",\n          label: \"Members\",\n          labels: \"months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(CDropdown, {\n          children: [/*#__PURE__*/_jsxDEV(CDropdownToggle, {\n            color: \"transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CDropdownMenu, {\n            className: \"pt-0\",\n            placement: \"bottom-end\",\n            children: [/*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Jan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Feb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Mar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Apr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"May\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Jun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Jul\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Aug\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Sep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Oct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Nov\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              children: \"Dec\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(WidgetsDropdown, \"51an+s7jwk2hKrNqDoqXRx/d2KE=\");\n\n_c = WidgetsDropdown;\nexport default WidgetsDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetsDropdown\");","map":{"version":3,"sources":["D:/I2T/Smarttech/tourbookingwebgit/src/views/widgets/WidgetsDropdown.js"],"names":["React","useState","useEffect","useContext","CWidgetDropdown","CRow","CCol","CDropdown","CDropdownMenu","CDropdownItem","CDropdownToggle","CIcon","ChartLineSimple","ChartBarSimple","dataservice","Select","WidgetsDropdown","GAmonth","setGAmonth","GAmonthstr","setGAmonthstr","Cmonth","setCmonth","GARawData","setGARawData","GAData","setGAData","GALabel","setGALabel","label","value","Months","setMonths","countdata","index","parseInt","push","toString","setNumberOfGuestData","getGuestArrived","isFetchCurrentMonth","Month","requestfor","data","isCurrentMonth","month","then","resultkey","_GARawdata","_GAData","_GAlabels","resultvalue","length","element","cnt","parseFloat","count","mnt","dt","getCollection","handleChangeOptionNOG","e","monthstr","id","handleChangeOptionGA","opt","height","rows","i","_mnt","find","obj","selectedGAMonths","elements","line","tension","handleClick","name","backgroundColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  CWidgetDropdown,\r\n  CRow,\r\n  CCol,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle,\r\n\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport ChartLineSimple from '../charts/ChartLineSimple';\r\nimport ChartBarSimple from '../charts/ChartBarSimple';\r\nimport dataservice from \"../service/dataservice\";\r\nimport Select from \"react-select\";\r\nconst WidgetsDropdown = () => {\r\n  // render\r\n  const [GAmonth, setGAmonth] = useState(2);\r\n  const [GAmonthstr, setGAmonthstr] = useState(\"Feb\");\r\n  const [Cmonth, setCmonth] = useState(0);\r\n  const [GARawData, setGARawData] = useState([]);\r\n  const [GAData, setGAData] = useState([]);\r\n  const [GALabel, setGALabel] = useState([]);\r\n  const [Months, setMonths] = useState([{ label: \"Jan\", value: 1 }, { label: \"Feb\", value: 2 }, { label: \"Mar\", value: 3 }, { label: \"Apr\", value: 4 }, { label: \"May\", value: 5 }, { label: \"Jun\", value: 6 },\r\n  { label: \"Jul\", value: 7 }, { label: \"Aug\", value: 8 }, { label: \"Sep\", value: 9 }, { label: \"Oct\", value: 10 }, { label: \"Nov\", value: 11 }, { label: \"Dec\", value: 12 }]);\r\n  let countdata = [];\r\n  for (let index = 1; index <= parseInt(100); index++) {\r\n    countdata.push({\r\n      value: index,\r\n      label: index.toString(),\r\n    });\r\n  }\r\n  setNumberOfGuestData(countdata);\r\n  const getGuestArrived = (isFetchCurrentMonth, Month) => {\r\n    dataservice(\"dashboardstats\", {\r\n      requestfor: 'getGuestArrived',\r\n      data: { isCurrentMonth: isFetchCurrentMonth, month: Month }\r\n    })\r\n      .then(function (data) {\r\n        debugger;\r\n        if (data.resultkey == 1) {\r\n          var _GARawdata = [];\r\n          var _GAData = [];\r\n          var _GAlabels = [];\r\n          if (data.resultvalue.length > 0) {\r\n            for (let index = 0; index < data.resultvalue.length; index++) {\r\n              const element = data.resultvalue[index];\r\n              _GARawdata.push({ cnt: parseFloat(element.count), mnt: element.mnt, dt: element.dt });\r\n              if (parseFloat(element.mnt) == GAmonth) {\r\n                _GAData.push(parseFloat(element.count));\r\n                _GAlabels.push(element.dt);\r\n              }\r\n            }\r\n          }\r\n          setGARawData(_GARawdata)\r\n\r\n\r\n          setGAData(_GAData);\r\n          setGALabel(_GAlabels);\r\n\r\n        }\r\n      })\r\n  }\r\n  const getCollection = () => {\r\n    dataservice(\"dashboardstats\", { requestfor: 'getCollection', data: { month: Cmonth } })\r\n      .then(function (data) {\r\n\r\n      })\r\n  }\r\n  const handleChangeOptionNOG = (e) => {\r\n    // if (bulkuploaddata.length > 0) {\r\n    //   setSelectedNumberGuestBeforConfirm(e.value);\r\n    //   setIsConfirmChange(!isconfirmchange);\r\n    // } else {\r\n    //   setSelectedNumberGuest(e.value);\r\n    // }\r\n    var monthstr = \"\";\r\n    switch (id) {\r\n      case 1:\r\n        monthstr = \"Jan\";\r\n        break;\r\n      case 2:\r\n        monthstr = \"Feb\";\r\n        break;\r\n      case 3:\r\n        monthstr = \"Mar\";\r\n        break;\r\n      case 4:\r\n        monthstr = \"Apr\";\r\n        break;\r\n      case 5:\r\n        monthstr = \"May\";\r\n        break;\r\n      case 6:\r\n        monthstr = \"Jun\";\r\n        break;\r\n      case 7:\r\n        monthstr = \"Jul\";\r\n        break;\r\n      case 8:\r\n        monthstr = \"Aug\";\r\n        break;\r\n      case 9:\r\n        monthstr = \"Sep\";\r\n        break;\r\n      case 10:\r\n        monthstr = \"Oct\";\r\n        break;\r\n      case 11:\r\n        monthstr = \"Nov\";\r\n        break;\r\n      case 12:\r\n        monthstr = \"Dec\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    setGAmonth(id);\r\n    setGAmonthstr(monthstr);\r\n  };\r\n  const handleChangeOptionGA = (id, opt) => {\r\n\r\n    switch (opt) {\r\n      case \"GA\":\r\n        setGAmonth(id);\r\n\r\n        setGAmonthstr(monthstr);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    getGuestArrived(true, 1);\r\n\r\n  }, [])\r\n  return (\r\n    <CRow>\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-primary\"\r\n          header=\"\"\r\n          text=\"Guest Arrived\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              pointed\r\n              className=\"c-chart-wrapper mt-3 mx-3\"\r\n              style={{ height: '70px' }}\r\n              dataPoints={GAData}\r\n              pointHoverBackgroundColor=\"primary\"\r\n              label={GAmonthstr}\r\n              labels={GALabel}\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle color=\"transparent\">\r\n              {/* <CIcon name=\"cil-settings\" /> */}\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n\r\n\r\n              {(() => {\r\n                const rows = [];\r\n                if (Months.length > 0) {\r\n                  for (let i = 0; i < Months.length; i++) {\r\n                    var _mnt = Months[i];\r\n                    //_veh.checked = false;\r\n\r\n                    rows.push(\r\n                      <>\r\n                        <Select\r\n                          className=\"dropdown\"\r\n                          placeholder=\"Select\"\r\n                          value={Months.find(\r\n                            (obj) => obj.value === selectedGAMonths\r\n                          )} // set selected values\r\n                          options={Months} // set list of the data\r\n                          onChange={handleChangeOptionGA} // assign onChange function\r\n                        />\r\n                      </>\r\n                    );\r\n                  }\r\n                  return rows;\r\n                }\r\n              })()}\r\n\r\n\r\n              {/* <CDropdownItem>Feb</CDropdownItem>\r\n              <CDropdownItem>Mar</CDropdownItem>\r\n              <CDropdownItem>Apr</CDropdownItem>\r\n              <CDropdownItem>May</CDropdownItem>\r\n              <CDropdownItem>Jun</CDropdownItem>\r\n              <CDropdownItem>Jul</CDropdownItem>\r\n              <CDropdownItem>Aug</CDropdownItem>\r\n              <CDropdownItem>Sep</CDropdownItem>\r\n              <CDropdownItem>Oct</CDropdownItem>\r\n              <CDropdownItem>Nov</CDropdownItem>\r\n              <CDropdownItem>Dec</CDropdownItem> */}\r\n\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-info\"\r\n          header=\"\"\r\n          text=\"Collection\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              pointed\r\n              className=\"mt-3 mx-3\"\r\n              style={{ height: '70px' }}\r\n              dataPoints={[1, 18, 9, 17, 34, 22, 11]}\r\n              pointHoverBackgroundColor=\"info\"\r\n              options={{ elements: { line: { tension: 0.00001 } } }}\r\n              label=\"Members\"\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle color=\"transparent\">\r\n              {/* <CIcon name=\"cil-settings\" /> */}\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              {/* <CDropdownItem>Jan</CDropdownItem>\r\n              <CDropdownItem>Feb</CDropdownItem>\r\n              <CDropdownItem>Mar</CDropdownItem>\r\n              <CDropdownItem>Apr</CDropdownItem>\r\n              <CDropdownItem>May</CDropdownItem>\r\n              <CDropdownItem>Jun</CDropdownItem>\r\n              <CDropdownItem>Jul</CDropdownItem>\r\n              <CDropdownItem>Aug</CDropdownItem>\r\n              <CDropdownItem>Sep</CDropdownItem>\r\n              <CDropdownItem>Oct</CDropdownItem>\r\n              <CDropdownItem>Nov</CDropdownItem>\r\n              <CDropdownItem>Dec</CDropdownItem> */}\r\n              {(() => {\r\n                const rows = [];\r\n                if (Months.length > 0) {\r\n                  for (let i = 0; i < Months.length; i++) {\r\n                    var _mnt = Months[i];\r\n                    //_veh.checked = false;\r\n\r\n                    rows.push(\r\n                      <>\r\n                        <CDropdownItem key={_mnt.id} onClick={() => this.handleClick(_mnt.id, \"C\")}>{_mnt.name}</CDropdownItem>\r\n                      </>\r\n                    );\r\n                  }\r\n                  return rows;\r\n                }\r\n              })()}\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-danger\"\r\n          header=\"\"\r\n          text=\"Bracelet Stats\"\r\n          footerSlot={\r\n            <ChartBarSimple\r\n              className=\"mt-3 mx-3\"\r\n              style={{ height: '70px' }}\r\n              backgroundColor=\"rgb(250, 152, 152)\"\r\n              label=\"Members\"\r\n              dataPoints={[{\r\n                label: 'Buy',\r\n                backgroundColor: 'rgb(250, 152, 152)',\r\n                data: [39, 80, 40, 35, 40, 20, 45]\r\n              }, {\r\n                label: 'Rent',\r\n                backgroundColor: 'rgb(0,216,255,0.9)',\r\n                data: [39, 80, 40, 35, 40, 20, 45]\r\n              }]}\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle color=\"transparent\">\r\n              {/* <CIcon name=\"cil-settings\" /> */}\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Jan</CDropdownItem>\r\n              <CDropdownItem>Feb</CDropdownItem>\r\n              <CDropdownItem>Mar</CDropdownItem>\r\n              <CDropdownItem>Apr</CDropdownItem>\r\n              <CDropdownItem>May</CDropdownItem>\r\n              <CDropdownItem>Jun</CDropdownItem>\r\n              <CDropdownItem>Jul</CDropdownItem>\r\n              <CDropdownItem>Aug</CDropdownItem>\r\n              <CDropdownItem>Sep</CDropdownItem>\r\n              <CDropdownItem>Oct</CDropdownItem>\r\n              <CDropdownItem>Nov</CDropdownItem>\r\n              <CDropdownItem>Dec</CDropdownItem>\r\n\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-warning\"\r\n          header=\"\"\r\n          text=\"Sr.Citizen Stats\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              className=\"mt-3\"\r\n              style={{ height: '70px' }}\r\n              backgroundColor=\"rgba(255,255,255,.2)\"\r\n              dataPoints={[78, 81, 80, 45, 34, 12, 40]}\r\n              options={{ elements: { line: { borderWidth: 2.5 } } }}\r\n              pointHoverBackgroundColor=\"warning\"\r\n              label=\"Members\"\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle color=\"transparent\">\r\n              {/* <CIcon name=\"cil-settings\" /> */}\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Jan</CDropdownItem>\r\n              <CDropdownItem>Feb</CDropdownItem>\r\n              <CDropdownItem>Mar</CDropdownItem>\r\n              <CDropdownItem>Apr</CDropdownItem>\r\n              <CDropdownItem>May</CDropdownItem>\r\n              <CDropdownItem>Jun</CDropdownItem>\r\n              <CDropdownItem>Jul</CDropdownItem>\r\n              <CDropdownItem>Aug</CDropdownItem>\r\n              <CDropdownItem>Sep</CDropdownItem>\r\n              <CDropdownItem>Oct</CDropdownItem>\r\n              <CDropdownItem>Nov</CDropdownItem>\r\n              <CDropdownItem>Dec</CDropdownItem>\r\n\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default WidgetsDropdown\r\n"]},"metadata":{},"sourceType":"module"}