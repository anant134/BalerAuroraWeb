{"ast":null,"code":"import _defineProperty from \"D:/I2T/Smarttech/tourbookingwebgit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:/I2T/Smarttech/tourbookingwebgit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:/I2T/Smarttech/tourbookingwebgit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\I2T\\\\Smarttech\\\\tourbookingwebgit\\\\src\\\\views\\\\Reports\\\\TransactionLog\\\\TransactionLog.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { CCard, CCardBody, CCardHeader, CCol, CRow, CButton, CModal, CModalTitle, CModalHeader, CModalBody, CForm, CInputGroupPrepend, CInputGroupText, CInputGroup, CInput, CFormGroup, CInputCheckbox, CLabel, CModalFooter, CBadge } from '@coreui/react';\nimport DataTable from \"react-data-table-component\";\nimport DataTableExtensions from \"react-data-table-component-extensions\";\nimport Select from 'react-select';\nimport CIcon from '@coreui/icons-react';\nimport dataservice from '../../service/dataservice';\nimport { toast } from 'react-toastify';\nimport { CSVLink } from \"react-csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar notify = function notify(type, message, systemerror) {\n  switch (type) {\n    case 1:\n      toast.success(message, {\n        position: toast.POSITION.TOP_CENTER\n      });\n      break;\n\n    case 2:\n      var dtlmsg;\n\n      if (systemerror !== undefined) {\n        dtlmsg = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Please contact to administrator!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 55\n          }, _this), message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, _this);\n      } else {\n        dtlmsg = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 18\n        }, _this);\n      }\n\n      toast.error( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CIcon, {\n          name: \"cil-warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, _this), \" Error\", dtlmsg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, _this), {\n        position: toast.POSITION.TOP_CENTER\n      });\n      break;\n\n    default:\n      break;\n  }\n};\n\nvar headerss = [{\n  label: \"Transaction id\",\n  key: \"paymentreferencenumber\"\n}, {\n  label: \"Primary Contact Name\",\n  key: \"primaryguest\"\n}, {\n  label: \"Primary Contact Email\",\n  key: \"email\"\n}, {\n  label: \"Mobile Number\",\n  key: \"mobilenumber\"\n}, {\n  label: \"Guest List\",\n  key: \"other\"\n}, {\n  label: \"Hotel\",\n  key: \"hotel\"\n}, {\n  label: \"From Date\",\n  key: \"fromdate\"\n}, {\n  label: \"TO Date\",\n  key: \"todate\"\n}, {\n  label: \"Number Of Tourist\",\n  key: \"pax\"\n}, {\n  label: \"Bracelet Buy\",\n  key: \"buybracelet\"\n}, {\n  label: \"Bracelet Rented\",\n  key: \"rentbracelet\"\n}, {\n  label: \"Time\",\n  key: \"slotid\"\n}, {\n  label: \"Vehicle Parking\",\n  key: \"vehicle\"\n}];\n\nvar TransactionLog = function TransactionLog() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      csvdata = _useState2[0],\n      setCSVData = _useState2[1];\n\n  var _useState3 = useState([new Date()]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedfromdate = _useState4[0],\n      setFromdate = _useState4[1];\n\n  var setselectedfromdate = function setselectedfromdate(e) {\n    setFromdate(e);\n    setTodate(e);\n  };\n\n  var _useState5 = useState([new Date()]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedtodate = _useState6[0],\n      setTodate = _useState6[1];\n\n  var setselectedtodate = function setselectedtodate(e) {\n    setTodate(e);\n    var todata = e;\n    var fromdata = selectedfromdate[0] == undefined ? selectedfromdate : selectedfromdate[0];\n  };\n\n  var url = \"https://maubantourism.smartpay.ph/tourbookingphp/tempdata/\"; //var url=\"https://tourism-test.smartpay.ph/tourbookingphp/tempdata/\";\n\n  var gettransactiondata = function gettransactiondata() {\n    dataservice(\"report\", {\n      requestfor: 'transactionlog',\n      data: {\n        flag: 'a',\n        fromdate: '',\n        todate: ''\n      }\n    }).then(function (data) {\n      if (data.resultkey == 1) {\n        var result = data.resultvalue;\n        setTransactionLog(_objectSpread(_objectSpread({}, TransactionLogdata), {}, _defineProperty({}, \"data\", result)));\n\n        if (result.length > 0) {\n          var datasd = [];\n\n          for (var index = 0; index < result.length; index++) {\n            var element = result[index];\n            datasd.push({\n              paymentreferencenumber: element.paymentreferencenumber,\n              primaryguest: element.primaryguest,\n              email: element.email,\n              mobilenumber: element.mobilenumber,\n              other: element.other,\n              hotel: element.hotel,\n              fromdate: element.fromdate,\n              todate: element.todate,\n              pax: element.pax,\n              buybracelet: element.buybracelet,\n              rentbracelet: element.rentbracelet,\n              slotid: element.slotid,\n              vehicle: element.vehicle\n            });\n          }\n\n          setCSVData(datasd);\n        }\n      } else {//  notify(2,\"No data found\");\n      }\n    }).catch(function (edata) {\n      notify(2, edata.toString(), 1);\n    });\n  };\n\n  useEffect(function () {\n    gettransactiondata();\n  }, []);\n\n  var search = function search() {\n    gettransactiondata();\n  };\n\n  var columns = [{\n    name: 'Transaction id',\n    selector: 'paymentreferencenumber',\n    sortable: true\n  }, {\n    name: 'Primary Contact Name',\n    selector: 'primaryguest',\n    sortable: true\n  }, {\n    name: 'Primary Contact Email',\n    selector: 'email',\n    sortable: true\n  }, {\n    name: 'Mobile Number',\n    selector: 'mobilenumber',\n    sortable: true\n  }, {\n    name: 'Guest List',\n    selector: 'other',\n    sortable: true\n  }, {\n    name: 'Hotel',\n    selector: 'hotel',\n    sortable: true\n  }, {\n    name: 'From Date',\n    selector: 'fromdate',\n    sortable: true\n  }, {\n    name: 'TO Date',\n    selector: 'todate',\n    sortable: true\n  }, {\n    name: 'Number Of Tourist',\n    selector: 'pax',\n    sortable: true\n  }, {\n    name: 'Bracelet Buy',\n    selector: 'buybracelet',\n    sortable: true\n  }, {\n    name: 'Bracelet Rent',\n    selector: 'rentbracelet',\n    sortable: true\n  }, {\n    name: 'Time ',\n    selector: 'slotid',\n    sortable: true\n  }, {\n    name: 'vehicle',\n    selector: 'vehicle',\n    sortable: true\n  }, {\n    name: 'qrcode',\n    selector: 'qrcode',\n    sortable: true,\n    cell: function cell(d) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"50\",\n        height: \"50\",\n        src: url + d.qrcode,\n        alt: \"slide 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 18\n      }, _this);\n    }\n  } //,\n  // {\n  //   name: 'Status',\n  //   selector: 'isactive',\n  //   sortable: true,\n  //   cell: d => <CBadge color={d.isactive==\"1\"?\"success\":\"danger\"}>\n  //                       {d.isactive==\"1\"?\"Active\":\"In Active\"}\n  //                      </CBadge>,\n  // }\n  ];\n  var data = [];\n\n  var _useState7 = useState({\n    columns: columns,\n    data: data\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      TransactionLogdata = _useState8[0],\n      setTransactionLog = _useState8[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(CCol, {\n        xl: 12,\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CRow, {\n              children: /*#__PURE__*/_jsxDEV(CCol, {\n                xl: 6,\n                children: [\"Transaction Log\", /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: \" Report\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-4 col-md-12 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"country\",\n                  children: \"From Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control\",\n                  value: selectedfromdate,\n                  minDate: new Date(),\n                  onChange: setselectedfromdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-4 col-md-12 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"country\",\n                  children: \"To Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control\",\n                  value: selectedtodate,\n                  minDate: new Date(),\n                  onChange: setselectedtodate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-4 col-md-12 mb-4\",\n                children: /*#__PURE__*/_jsxDEV(CButton, {\n                  block: true,\n                  onClick: function onClick() {\n                    return search();\n                  },\n                  color: \"primary\",\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CSVLink, {\n              className: \"mr-1 btn btn-primary\",\n              style: {\n                float: \"right\"\n              },\n              data: csvdata,\n              headers: headerss,\n              filename: \"Transactionlog.csv\",\n              children: \"Download csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(DataTableExtensions, _objectSpread(_objectSpread({}, TransactionLogdata), {}, {\n              children: /*#__PURE__*/_jsxDEV(DataTable, {\n                defaultSortField: \"id\",\n                defaultSortAsc: false,\n                pagination: true,\n                highlightOnHover: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, _this)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(TransactionLog, \"FhScnte5jzeSIxX4Dd7aJR6J/mk=\");\n\n_c = TransactionLog;\nexport default TransactionLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionLog\");","map":{"version":3,"sources":["D:/I2T/Smarttech/tourbookingwebgit/src/views/Reports/TransactionLog/TransactionLog.js"],"names":["React","useState","useEffect","useHistory","useLocation","CCard","CCardBody","CCardHeader","CCol","CRow","CButton","CModal","CModalTitle","CModalHeader","CModalBody","CForm","CInputGroupPrepend","CInputGroupText","CInputGroup","CInput","CFormGroup","CInputCheckbox","CLabel","CModalFooter","CBadge","DataTable","DataTableExtensions","Select","CIcon","dataservice","toast","CSVLink","notify","type","message","systemerror","success","position","POSITION","TOP_CENTER","dtlmsg","undefined","error","headerss","label","key","TransactionLog","csvdata","setCSVData","Date","selectedfromdate","setFromdate","setselectedfromdate","e","setTodate","selectedtodate","setselectedtodate","todata","fromdata","url","gettransactiondata","requestfor","data","flag","fromdate","todate","then","resultkey","result","resultvalue","setTransactionLog","TransactionLogdata","length","datasd","index","element","push","paymentreferencenumber","primaryguest","email","mobilenumber","other","hotel","pax","buybracelet","rentbracelet","slotid","vehicle","catch","edata","toString","search","columns","name","selector","sortable","cell","d","qrcode","float"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CModal,\r\n  CModalTitle,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CForm,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CInputGroup,\r\n  CInput,\r\n  CFormGroup,\r\n  CInputCheckbox,\r\n  CLabel,\r\n  CModalFooter,\r\n  CBadge\r\n} from '@coreui/react'\r\n\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport Select from 'react-select';\r\nimport CIcon from '@coreui/icons-react';\r\nimport dataservice from '../../service/dataservice';\r\nimport { toast } from 'react-toastify';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\n\r\n\r\n\r\nconst notify = (type, message, systemerror) => {\r\n  switch (type) {\r\n    case 1:\r\n      toast.success(message, {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      break;\r\n    case 2:\r\n      var dtlmsg;\r\n      if (systemerror !== undefined) {\r\n        dtlmsg = <div>Please contact to administrator!<br></br>{message}</div>;\r\n      } else {\r\n        dtlmsg = <div>{message}</div>;\r\n      }\r\n\r\n      toast.error(<div>\r\n        <CIcon name=\"cil-warning\" /> Error\r\n\r\n        {dtlmsg}\r\n\r\n      </div>, {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\nconst headerss = [\r\n  { label: \"Transaction id\", key: \"paymentreferencenumber\" },\r\n  { label: \"Primary Contact Name\", key: \"primaryguest\" },\r\n  { label: \"Primary Contact Email\", key: \"email\" },\r\n  { label: \"Mobile Number\", key: \"mobilenumber\" },\r\n  { label: \"Guest List\", key: \"other\" },\r\n  { label: \"Hotel\", key: \"hotel\" },\r\n  { label: \"From Date\", key: \"fromdate\" },\r\n  { label: \"TO Date\", key: \"todate\" },\r\n  { label: \"Number Of Tourist\", key: \"pax\" },\r\n  { label: \"Bracelet Buy\", key: \"buybracelet\" },\r\n  { label: \"Bracelet Rented\", key: \"rentbracelet\" },\r\n  { label: \"Time\", key: \"slotid\" },\r\n  { label: \"Vehicle Parking\", key: \"vehicle\" }\r\n\r\n];\r\n\r\nconst TransactionLog = () => {\r\n  const [csvdata, setCSVData] = useState([]);\r\n  const [selectedfromdate, setFromdate] = useState([new Date()]);\r\n  const setselectedfromdate = (e) => {\r\n    setFromdate(e);\r\n    setTodate(e);\r\n\r\n  };\r\n\r\n  const [selectedtodate, setTodate] = useState([new Date()]);\r\n  const setselectedtodate = (e) => {\r\n    setTodate(e);\r\n    var todata = e;\r\n    var fromdata =\r\n      selectedfromdate[0] == undefined ? selectedfromdate : selectedfromdate[0];\r\n\r\n  };\r\n\r\n\r\n  var url = \"https://maubantourism.smartpay.ph/tourbookingphp/tempdata/\";\r\n  //var url=\"https://tourism-test.smartpay.ph/tourbookingphp/tempdata/\";\r\n  const gettransactiondata = () => {\r\n    dataservice(\"report\", { requestfor: 'transactionlog', data: { flag: 'a', fromdate: '', todate: '' } })\r\n      .then(function (data) {\r\n        if (data.resultkey == 1) {\r\n          var result = data.resultvalue;\r\n\r\n          setTransactionLog({ ...TransactionLogdata, [\"data\"]: result });\r\n          if (result.length > 0) {\r\n            let datasd = [];\r\n            for (let index = 0; index < result.length; index++) {\r\n              const element = result[index];\r\n              datasd.push(\r\n                {\r\n                  paymentreferencenumber: element.paymentreferencenumber,\r\n                  primaryguest: element.primaryguest,\r\n                  email: element.email,\r\n                  mobilenumber: element.mobilenumber,\r\n                  other: element.other,\r\n                  hotel: element.hotel,\r\n                  fromdate: element.fromdate,\r\n                  todate: element.todate,\r\n                  pax: element.pax,\r\n                  buybracelet: element.buybracelet,\r\n                  rentbracelet: element.rentbracelet,\r\n                  slotid: element.slotid,\r\n                  vehicle: element.vehicle\r\n                }\r\n              );\r\n\r\n            }\r\n            setCSVData(datasd);\r\n          }\r\n\r\n        } else {\r\n          //  notify(2,\"No data found\");\r\n        }\r\n\r\n      })\r\n      .catch(function (edata) {\r\n        notify(2, edata.toString(), 1);\r\n      });\r\n\r\n\r\n\r\n  }\r\n  useEffect(() => {\r\n\r\n    gettransactiondata();\r\n\r\n\r\n  }, [])\r\n\r\n  const search = () => {\r\n    gettransactiondata();\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Transaction id',\r\n      selector: 'paymentreferencenumber',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Primary Contact Name',\r\n      selector: 'primaryguest',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Primary Contact Email',\r\n      selector: 'email',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Mobile Number',\r\n      selector: 'mobilenumber',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Guest List',\r\n      selector: 'other',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Hotel',\r\n      selector: 'hotel',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'From Date',\r\n      selector: 'fromdate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'TO Date',\r\n      selector: 'todate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Number Of Tourist',\r\n      selector: 'pax',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Bracelet Buy',\r\n      selector: 'buybracelet',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Bracelet Rent',\r\n      selector: 'rentbracelet',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Time ',\r\n      selector: 'slotid',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'vehicle',\r\n      selector: 'vehicle',\r\n      sortable: true,\r\n    },\r\n\r\n    {\r\n      name: 'qrcode',\r\n      selector: 'qrcode',\r\n      sortable: true,\r\n      cell: d => <img width='50' height='50' src={url + d.qrcode} alt=\"slide 1\" />,\r\n\r\n\r\n    }\r\n    //,\r\n    // {\r\n    //   name: 'Status',\r\n    //   selector: 'isactive',\r\n    //   sortable: true,\r\n    //   cell: d => <CBadge color={d.isactive==\"1\"?\"success\":\"danger\"}>\r\n    //                       {d.isactive==\"1\"?\"Active\":\"In Active\"}\r\n    //                      </CBadge>,\r\n    // }\r\n\r\n  ];\r\n  const data = [];\r\n  const [TransactionLogdata, setTransactionLog] = useState({\r\n    columns,\r\n    data\r\n  });\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xl={12}>\r\n          <CCard>\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol xl={6}>\r\n                  Transaction Log\r\n                  <small className=\"text-muted\"> Report</small>\r\n                </CCol>\r\n\r\n              </CRow>\r\n\r\n\r\n\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <div className='row'>\r\n                <div className=\"col-lg-4 col-md-12 mb-4\">\r\n                  <label for=\"country\">\r\n                    From Date\r\n                  </label>\r\n                  <DatePicker\r\n                    className=\"form-control\"\r\n                    value={selectedfromdate}\r\n                    minDate={new Date()}\r\n                    onChange={setselectedfromdate}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-12 mb-4\">\r\n                  <label for=\"country\">\r\n                    To Date\r\n                  </label>\r\n                  <DatePicker\r\n                    className=\"form-control\"\r\n                    value={selectedtodate}\r\n                    minDate={new Date()}\r\n                    onChange={setselectedtodate}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-12 mb-4\">\r\n\r\n                  <CButton block onClick={() => search()} color=\"primary\">\r\n                    Search\r\n                  </CButton>\r\n                </div>\r\n              </div>\r\n              <CSVLink className=\"mr-1 btn btn-primary\" style={{ float: \"right\" }} data={csvdata} headers={headerss} filename={\"Transactionlog.csv\"}>\r\n                Download csv\r\n              </CSVLink>\r\n\r\n              <DataTableExtensions\r\n                {...TransactionLogdata}\r\n\r\n              >\r\n\r\n\r\n                <DataTable\r\n                  defaultSortField=\"id\"\r\n                  defaultSortAsc={false}\r\n                  pagination\r\n                  highlightOnHover\r\n\r\n                />\r\n              </DataTableExtensions>\r\n\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n\r\n  )\r\n}\r\nexport default TransactionLog"]},"metadata":{},"sourceType":"module"}